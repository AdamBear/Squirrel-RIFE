# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'SVFI_UI.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1332, 865)
        MainWindow.setDockOptions(
            QtWidgets.QMainWindow.AllowNestedDocks | QtWidgets.QMainWindow.AllowTabbedDocks | QtWidgets.QMainWindow.AnimatedDocks)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.MainFrame = QtWidgets.QFrame(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.MainFrame.sizePolicy().hasHeightForWidth())
        self.MainFrame.setSizePolicy(sizePolicy)
        self.MainFrame.setObjectName("MainFrame")
        self.gridLayout_18 = QtWidgets.QGridLayout(self.MainFrame)
        self.gridLayout_18.setObjectName("gridLayout_18")
        self.tabWidget = QtWidgets.QTabWidget(self.MainFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        self.tabWidget.setElideMode(QtCore.Qt.ElideLeft)
        self.tabWidget.setObjectName("tabWidget")
        self.step1 = QtWidgets.QWidget()
        self.step1.setEnabled(True)
        self.step1.setObjectName("step1")
        self.gridLayout_19 = QtWidgets.QGridLayout(self.step1)
        self.gridLayout_19.setObjectName("gridLayout_19")
        self.splitter = QtWidgets.QSplitter(self.step1)
        self.splitter.setOrientation(QtCore.Qt.Horizontal)
        self.splitter.setOpaqueResize(True)
        self.splitter.setChildrenCollapsible(False)
        self.splitter.setObjectName("splitter")
        self.InputArea = QtWidgets.QWidget(self.splitter)
        self.InputArea.setObjectName("InputArea")
        self.gridLayout = QtWidgets.QGridLayout(self.InputArea)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.OutputLabel = QtWidgets.QLabel(self.InputArea)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.OutputLabel.sizePolicy().hasHeightForWidth())
        self.OutputLabel.setSizePolicy(sizePolicy)
        self.OutputLabel.setObjectName("OutputLabel")
        self.gridLayout.addWidget(self.OutputLabel, 3, 0, 1, 1)
        self.AllInOne = QtWidgets.QPushButton(self.InputArea)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.AllInOne.sizePolicy().hasHeightForWidth())
        self.AllInOne.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Abril Fatface")
        font.setPointSize(28)
        self.AllInOne.setFont(font)
        self.AllInOne.setObjectName("AllInOne")
        self.gridLayout.addWidget(self.AllInOne, 12, 0, 1, 1)
        self.groupBox = QtWidgets.QGroupBox(self.InputArea)
        self.groupBox.setTitle("")
        self.groupBox.setObjectName("groupBox")
        self.gridLayout_14 = QtWidgets.QGridLayout(self.groupBox)
        self.gridLayout_14.setObjectName("gridLayout_14")
        self.gridLayout_9 = QtWidgets.QGridLayout()
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.UseNCNNButton = QtWidgets.QCheckBox(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.UseNCNNButton.sizePolicy().hasHeightForWidth())
        self.UseNCNNButton.setSizePolicy(sizePolicy)
        self.UseNCNNButton.setObjectName("UseNCNNButton")
        self.gridLayout_9.addWidget(self.UseNCNNButton, 4, 0, 1, 1)
        self.SaveAudioChecker = QtWidgets.QCheckBox(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.SaveAudioChecker.sizePolicy().hasHeightForWidth())
        self.SaveAudioChecker.setSizePolicy(sizePolicy)
        self.SaveAudioChecker.setChecked(True)
        self.SaveAudioChecker.setObjectName("SaveAudioChecker")
        self.gridLayout_9.addWidget(self.SaveAudioChecker, 0, 0, 1, 1)
        self.ImgOutputChecker = QtWidgets.QCheckBox(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ImgOutputChecker.sizePolicy().hasHeightForWidth())
        self.ImgOutputChecker.setSizePolicy(sizePolicy)
        self.ImgOutputChecker.setObjectName("ImgOutputChecker")
        self.gridLayout_9.addWidget(self.ImgOutputChecker, 0, 1, 1, 1)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setSizeConstraint(QtWidgets.QLayout.SetMaximumSize)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.label_12 = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_12.sizePolicy().hasHeightForWidth())
        self.label_12.setSizePolicy(sizePolicy)
        self.label_12.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.label_12.setObjectName("label_12")
        self.horizontalLayout_6.addWidget(self.label_12)
        self.ExtSelector = MyComboBox(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ExtSelector.sizePolicy().hasHeightForWidth())
        self.ExtSelector.setSizePolicy(sizePolicy)
        self.ExtSelector.setObjectName("ExtSelector")
        self.ExtSelector.addItem("")
        self.ExtSelector.addItem("")
        self.ExtSelector.addItem("")
        self.horizontalLayout_6.addWidget(self.ExtSelector)
        self.gridLayout_9.addLayout(self.horizontalLayout_6, 4, 1, 1, 1)
        self.gridLayout_14.addLayout(self.gridLayout_9, 0, 0, 1, 1)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.InputFPSReminder = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.InputFPSReminder.sizePolicy().hasHeightForWidth())
        self.InputFPSReminder.setSizePolicy(sizePolicy)
        self.InputFPSReminder.setAlignment(QtCore.Qt.AlignCenter)
        self.InputFPSReminder.setObjectName("InputFPSReminder")
        self.horizontalLayout.addWidget(self.InputFPSReminder)
        self.InputFPS = QtWidgets.QLineEdit(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.InputFPS.sizePolicy().hasHeightForWidth())
        self.InputFPS.setSizePolicy(sizePolicy)
        self.InputFPS.setDragEnabled(True)
        self.InputFPS.setObjectName("InputFPS")
        self.horizontalLayout.addWidget(self.InputFPS)
        self.InterpExpReminder = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.InterpExpReminder.sizePolicy().hasHeightForWidth())
        self.InterpExpReminder.setSizePolicy(sizePolicy)
        self.InterpExpReminder.setAlignment(QtCore.Qt.AlignCenter)
        self.InterpExpReminder.setObjectName("InterpExpReminder")
        self.horizontalLayout.addWidget(self.InterpExpReminder)
        self.ExpSelecter = MyComboBox(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ExpSelecter.sizePolicy().hasHeightForWidth())
        self.ExpSelecter.setSizePolicy(sizePolicy)
        self.ExpSelecter.setObjectName("ExpSelecter")
        self.ExpSelecter.addItem("")
        self.ExpSelecter.addItem("")
        self.ExpSelecter.addItem("")
        self.ExpSelecter.addItem("")
        self.ExpSelecter.addItem("")
        self.ExpSelecter.addItem("")
        self.horizontalLayout.addWidget(self.ExpSelecter)
        self.OutputFPSReminder = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.OutputFPSReminder.sizePolicy().hasHeightForWidth())
        self.OutputFPSReminder.setSizePolicy(sizePolicy)
        self.OutputFPSReminder.setAlignment(QtCore.Qt.AlignCenter)
        self.OutputFPSReminder.setObjectName("OutputFPSReminder")
        self.horizontalLayout.addWidget(self.OutputFPSReminder)
        self.OutputFPS = QtWidgets.QLineEdit(self.groupBox)
        self.OutputFPS.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.OutputFPS.sizePolicy().hasHeightForWidth())
        self.OutputFPS.setSizePolicy(sizePolicy)
        self.OutputFPS.setDragEnabled(True)
        self.OutputFPS.setObjectName("OutputFPS")
        self.horizontalLayout.addWidget(self.OutputFPS)
        self.gridLayout_14.addLayout(self.horizontalLayout, 1, 0, 1, 1)
        self.gridLayout.addWidget(self.groupBox, 9, 0, 1, 1)
        self.horizontalLayout_12 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_12.setObjectName("horizontalLayout_12")
        self.InputButton = QtWidgets.QPushButton(self.InputArea)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.InputButton.sizePolicy().hasHeightForWidth())
        self.InputButton.setSizePolicy(sizePolicy)
        self.InputButton.setObjectName("InputButton")
        self.horizontalLayout_12.addWidget(self.InputButton)
        self.InputDirButton = QtWidgets.QPushButton(self.InputArea)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.InputDirButton.sizePolicy().hasHeightForWidth())
        self.InputDirButton.setSizePolicy(sizePolicy)
        self.InputDirButton.setObjectName("InputDirButton")
        self.horizontalLayout_12.addWidget(self.InputDirButton)
        self.OutputButton = QtWidgets.QPushButton(self.InputArea)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.OutputButton.sizePolicy().hasHeightForWidth())
        self.OutputButton.setSizePolicy(sizePolicy)
        self.OutputButton.setObjectName("OutputButton")
        self.horizontalLayout_12.addWidget(self.OutputButton)
        self.ShowAdvance = QtWidgets.QPushButton(self.InputArea)
        self.ShowAdvance.setObjectName("ShowAdvance")
        self.horizontalLayout_12.addWidget(self.ShowAdvance)
        self.gridLayout.addLayout(self.horizontalLayout_12, 8, 0, 1, 1)
        self.InputFileName = MyListWidget(self.InputArea)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.InputFileName.sizePolicy().hasHeightForWidth())
        self.InputFileName.setSizePolicy(sizePolicy)
        self.InputFileName.setTabKeyNavigation(True)
        self.InputFileName.setDragEnabled(True)
        self.InputFileName.setDragDropOverwriteMode(True)
        self.InputFileName.setDragDropMode(QtWidgets.QAbstractItemView.DropOnly)
        self.InputFileName.setObjectName("InputFileName")
        self.gridLayout.addWidget(self.InputFileName, 2, 0, 1, 1)
        self.OutputFolder = MyLineWidget(self.InputArea)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.OutputFolder.sizePolicy().hasHeightForWidth())
        self.OutputFolder.setSizePolicy(sizePolicy)
        self.OutputFolder.setObjectName("OutputFolder")
        self.gridLayout.addWidget(self.OutputFolder, 4, 0, 1, 1)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.InputLabel = QtWidgets.QLabel(self.InputArea)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.InputLabel.sizePolicy().hasHeightForWidth())
        self.InputLabel.setSizePolicy(sizePolicy)
        self.InputLabel.setObjectName("InputLabel")
        self.horizontalLayout_7.addWidget(self.InputLabel)
        self.ClearInputButton = QtWidgets.QPushButton(self.InputArea)
        self.ClearInputButton.setObjectName("ClearInputButton")
        self.horizontalLayout_7.addWidget(self.ClearInputButton)
        self.gridLayout.addLayout(self.horizontalLayout_7, 0, 0, 1, 1)
        self.AdvanceArea = QtWidgets.QWidget(self.splitter)
        self.AdvanceArea.setMinimumSize(QtCore.QSize(0, 0))
        self.AdvanceArea.setMaximumSize(QtCore.QSize(2333333, 16777215))
        self.AdvanceArea.setObjectName("AdvanceArea")
        self.gridLayout_17 = QtWidgets.QGridLayout(self.AdvanceArea)
        self.gridLayout_17.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_17.setObjectName("gridLayout_17")
        self.AdvanceSettingsArea = QtWidgets.QScrollArea(self.AdvanceArea)
        self.AdvanceSettingsArea.setMinimumSize(QtCore.QSize(450, 0))
        self.AdvanceSettingsArea.setMaximumSize(QtCore.QSize(600, 16777215))
        self.AdvanceSettingsArea.setStyleSheet("")
        self.AdvanceSettingsArea.setWidgetResizable(True)
        self.AdvanceSettingsArea.setObjectName("AdvanceSettingsArea")
        self.AdvanceSettingsAreaWidget = QtWidgets.QWidget()
        self.AdvanceSettingsAreaWidget.setGeometry(QtCore.QRect(0, 0, 571, 743))
        self.AdvanceSettingsAreaWidget.setObjectName("AdvanceSettingsAreaWidget")
        self.gridLayout_10 = QtWidgets.QGridLayout(self.AdvanceSettingsAreaWidget)
        self.gridLayout_10.setObjectName("gridLayout_10")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout()
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.SaveCurrentSettings = QtWidgets.QPushButton(self.AdvanceSettingsAreaWidget)
        self.SaveCurrentSettings.setObjectName("SaveCurrentSettings")
        self.verticalLayout_8.addWidget(self.SaveCurrentSettings)
        self.LoadCurrentSettings = QtWidgets.QPushButton(self.AdvanceSettingsAreaWidget)
        self.LoadCurrentSettings.setObjectName("LoadCurrentSettings")
        self.verticalLayout_8.addWidget(self.LoadCurrentSettings)
        self.OutputSettingsButton = QtWidgets.QPushButton(self.AdvanceSettingsAreaWidget)
        self.OutputSettingsButton.setObjectName("OutputSettingsButton")
        self.verticalLayout_8.addWidget(self.OutputSettingsButton)
        self.DebugChecker = QtWidgets.QCheckBox(self.AdvanceSettingsAreaWidget)
        self.DebugChecker.setObjectName("DebugChecker")
        self.verticalLayout_8.addWidget(self.DebugChecker)
        self.gridLayout_10.addLayout(self.verticalLayout_8, 2, 0, 1, 1)
        self.AdvanceSettingsLabel = QtWidgets.QLabel(self.AdvanceSettingsAreaWidget)
        self.AdvanceSettingsLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.AdvanceSettingsLabel.setObjectName("AdvanceSettingsLabel")
        self.gridLayout_10.addWidget(self.AdvanceSettingsLabel, 0, 0, 1, 1)
        self.toolBox = QtWidgets.QToolBox(self.AdvanceSettingsAreaWidget)
        self.toolBox.setMaximumSize(QtCore.QSize(800, 16777215))
        self.toolBox.setObjectName("toolBox")
        self.ResumeSettings = QtWidgets.QWidget()
        self.ResumeSettings.setGeometry(QtCore.QRect(0, 0, 553, 440))
        self.ResumeSettings.setObjectName("ResumeSettings")
        self.gridLayout_13 = QtWidgets.QGridLayout(self.ResumeSettings)
        self.gridLayout_13.setObjectName("gridLayout_13")
        self.groupBox_2 = QtWidgets.QGroupBox(self.ResumeSettings)
        self.groupBox_2.setTitle("")
        self.groupBox_2.setObjectName("groupBox_2")
        self.gridLayout_15 = QtWidgets.QGridLayout(self.groupBox_2)
        self.gridLayout_15.setObjectName("gridLayout_15")
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_15.addItem(spacerItem, 2, 0, 1, 1)
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.EndPoint = QtWidgets.QTimeEdit(self.groupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.EndPoint.sizePolicy().hasHeightForWidth())
        self.EndPoint.setSizePolicy(sizePolicy)
        self.EndPoint.setMinimumSize(QtCore.QSize(100, 0))
        self.EndPoint.setMaximumSize(QtCore.QSize(150, 16777215))
        self.EndPoint.setCurrentSection(QtWidgets.QDateTimeEdit.HourSection)
        self.EndPoint.setObjectName("EndPoint")
        self.gridLayout_2.addWidget(self.EndPoint, 3, 2, 1, 1)
        self.label_22 = QtWidgets.QLabel(self.groupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_22.sizePolicy().hasHeightForWidth())
        self.label_22.setSizePolicy(sizePolicy)
        self.label_22.setMinimumSize(QtCore.QSize(100, 0))
        self.label_22.setMaximumSize(QtCore.QSize(150, 16777215))
        self.label_22.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.label_22.setObjectName("label_22")
        self.gridLayout_2.addWidget(self.label_22, 5, 0, 1, 1)
        self.label_21 = QtWidgets.QLabel(self.groupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_21.sizePolicy().hasHeightForWidth())
        self.label_21.setSizePolicy(sizePolicy)
        self.label_21.setMinimumSize(QtCore.QSize(100, 0))
        self.label_21.setMaximumSize(QtCore.QSize(150, 16777215))
        self.label_21.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.label_21.setObjectName("label_21")
        self.gridLayout_2.addWidget(self.label_21, 6, 0, 1, 1)
        self.EndPointLabel = QtWidgets.QLabel(self.groupBox_2)
        self.EndPointLabel.setMinimumSize(QtCore.QSize(100, 0))
        self.EndPointLabel.setMaximumSize(QtCore.QSize(200, 16777215))
        self.EndPointLabel.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.EndPointLabel.setObjectName("EndPointLabel")
        self.gridLayout_2.addWidget(self.EndPointLabel, 3, 0, 1, 1)
        self.StartPoint = QtWidgets.QTimeEdit(self.groupBox_2)
        self.StartPoint.setMinimumSize(QtCore.QSize(100, 0))
        self.StartPoint.setMaximumSize(QtCore.QSize(150, 16777215))
        self.StartPoint.setCurrentSection(QtWidgets.QDateTimeEdit.HourSection)
        self.StartPoint.setObjectName("StartPoint")
        self.gridLayout_2.addWidget(self.StartPoint, 2, 2, 1, 1)
        self.AutoSet = QtWidgets.QPushButton(self.groupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.AutoSet.sizePolicy().hasHeightForWidth())
        self.AutoSet.setSizePolicy(sizePolicy)
        self.AutoSet.setObjectName("AutoSet")
        self.gridLayout_2.addWidget(self.AutoSet, 1, 2, 1, 1)
        self.AutoSetReminder = QtWidgets.QLabel(self.groupBox_2)
        self.AutoSetReminder.setMinimumSize(QtCore.QSize(100, 0))
        self.AutoSetReminder.setMaximumSize(QtCore.QSize(150, 16777215))
        self.AutoSetReminder.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.AutoSetReminder.setObjectName("AutoSetReminder")
        self.gridLayout_2.addWidget(self.AutoSetReminder, 1, 0, 1, 1)
        self.StartPointLabel = QtWidgets.QLabel(self.groupBox_2)
        self.StartPointLabel.setMinimumSize(QtCore.QSize(100, 0))
        self.StartPointLabel.setMaximumSize(QtCore.QSize(200, 16777215))
        self.StartPointLabel.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.StartPointLabel.setObjectName("StartPointLabel")
        self.gridLayout_2.addWidget(self.StartPointLabel, 2, 0, 1, 1)
        self.StartFrame = QtWidgets.QSpinBox(self.groupBox_2)
        self.StartFrame.setMinimum(-1)
        self.StartFrame.setMaximum(999999999)
        self.StartFrame.setObjectName("StartFrame")
        self.gridLayout_2.addWidget(self.StartFrame, 6, 2, 1, 1)
        self.StartChunk = QtWidgets.QSpinBox(self.groupBox_2)
        self.StartChunk.setMinimum(-1)
        self.StartChunk.setMaximum(999999999)
        self.StartChunk.setObjectName("StartChunk")
        self.gridLayout_2.addWidget(self.StartChunk, 5, 2, 1, 1)
        self.RefreshStartInfo = QtWidgets.QPushButton(self.groupBox_2)
        self.RefreshStartInfo.setObjectName("RefreshStartInfo")
        self.gridLayout_2.addWidget(self.RefreshStartInfo, 7, 0, 1, 1)
        self.gridLayout_15.addLayout(self.gridLayout_2, 0, 0, 1, 1)
        self.gridLayout_13.addWidget(self.groupBox_2, 0, 0, 1, 1)
        self.toolBox.addItem(self.ResumeSettings, "")
        self.ScdetSettings = QtWidgets.QWidget()
        self.ScdetSettings.setGeometry(QtCore.QRect(0, 0, 553, 440))
        self.ScdetSettings.setObjectName("ScdetSettings")
        self.gridLayout_22 = QtWidgets.QGridLayout(self.ScdetSettings)
        self.gridLayout_22.setObjectName("gridLayout_22")
        self.groupBox_3 = QtWidgets.QGroupBox(self.ScdetSettings)
        self.groupBox_3.setTitle("")
        self.groupBox_3.setObjectName("groupBox_3")
        self.gridLayout_20 = QtWidgets.QGridLayout(self.groupBox_3)
        self.gridLayout_20.setObjectName("gridLayout_20")
        self.gridLayout_3 = QtWidgets.QGridLayout()
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.ScdetMaxDiffSelector = MySpinBox(self.groupBox_3)
        self.ScdetMaxDiffSelector.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ScdetMaxDiffSelector.sizePolicy().hasHeightForWidth())
        self.ScdetMaxDiffSelector.setSizePolicy(sizePolicy)
        self.ScdetMaxDiffSelector.setMinimum(1)
        self.ScdetMaxDiffSelector.setMaximum(999)
        self.ScdetMaxDiffSelector.setProperty("value", 20)
        self.ScdetMaxDiffSelector.setObjectName("ScdetMaxDiffSelector")
        self.gridLayout_3.addWidget(self.ScdetMaxDiffSelector, 1, 1, 1, 1)
        self.UseFixedScdet = QtWidgets.QCheckBox(self.groupBox_3)
        self.UseFixedScdet.setObjectName("UseFixedScdet")
        self.gridLayout_3.addWidget(self.UseFixedScdet, 1, 0, 1, 1)
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.DupRmMode = QtWidgets.QComboBox(self.groupBox_3)
        self.DupRmMode.setObjectName("DupRmMode")
        self.DupRmMode.addItem("")
        self.DupRmMode.addItem("")
        self.DupRmMode.addItem("")
        self.DupRmMode.addItem("")
        self.DupRmMode.addItem("")
        self.DupRmMode.addItem("")
        self.DupRmMode.addItem("")
        self.DupRmMode.addItem("")
        self.horizontalLayout_8.addWidget(self.DupRmMode)
        self.DupFramesTSelector = MyDoubleSpinBox(self.groupBox_3)
        self.DupFramesTSelector.setMinimum(0.01)
        self.DupFramesTSelector.setMaximum(99.0)
        self.DupFramesTSelector.setProperty("value", 10.0)
        self.DupFramesTSelector.setObjectName("DupFramesTSelector")
        self.horizontalLayout_8.addWidget(self.DupFramesTSelector)
        self.gridLayout_3.addLayout(self.horizontalLayout_8, 2, 1, 1, 1)
        self.horizontalLayout_16 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_16.setObjectName("horizontalLayout_16")
        self.ScdetSelector = MySpinBox(self.groupBox_3)
        self.ScdetSelector.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ScdetSelector.sizePolicy().hasHeightForWidth())
        self.ScdetSelector.setSizePolicy(sizePolicy)
        self.ScdetSelector.setMinimum(1)
        self.ScdetSelector.setMaximum(999)
        self.ScdetSelector.setProperty("value", 12)
        self.ScdetSelector.setObjectName("ScdetSelector")
        self.horizontalLayout_16.addWidget(self.ScdetSelector)
        self.ScdetFlowLen = QtWidgets.QComboBox(self.groupBox_3)
        self.ScdetFlowLen.setObjectName("ScdetFlowLen")
        self.ScdetFlowLen.addItem("")
        self.ScdetFlowLen.addItem("")
        self.horizontalLayout_16.addWidget(self.ScdetFlowLen)
        self.gridLayout_3.addLayout(self.horizontalLayout_16, 0, 1, 1, 1)
        self.ScedetChecker = QtWidgets.QCheckBox(self.groupBox_3)
        self.ScedetChecker.setChecked(True)
        self.ScedetChecker.setObjectName("ScedetChecker")
        self.gridLayout_3.addWidget(self.ScedetChecker, 0, 0, 1, 1)
        self.DupRmLabel = QtWidgets.QLabel(self.groupBox_3)
        self.DupRmLabel.setObjectName("DupRmLabel")
        self.gridLayout_3.addWidget(self.DupRmLabel, 2, 0, 1, 1)
        self.ScdetUseMix = QtWidgets.QCheckBox(self.groupBox_3)
        self.ScdetUseMix.setObjectName("ScdetUseMix")
        self.gridLayout_3.addWidget(self.ScdetUseMix, 3, 0, 1, 1)
        self.ScdetOutput = QtWidgets.QCheckBox(self.groupBox_3)
        self.ScdetOutput.setChecked(True)
        self.ScdetOutput.setObjectName("ScdetOutput")
        self.gridLayout_3.addWidget(self.ScdetOutput, 3, 1, 1, 1)
        self.gridLayout_20.addLayout(self.gridLayout_3, 1, 0, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_20.addItem(spacerItem1, 3, 0, 1, 1)
        self.horizontalLayout_14 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_14.setObjectName("horizontalLayout_14")
        self.ScdetModeLabel = QtWidgets.QLabel(self.groupBox_3)
        self.ScdetModeLabel.setObjectName("ScdetModeLabel")
        self.horizontalLayout_14.addWidget(self.ScdetModeLabel)
        self.ScdetMode = QtWidgets.QComboBox(self.groupBox_3)
        self.ScdetMode.setObjectName("ScdetMode")
        self.ScdetMode.addItem("")
        self.ScdetMode.addItem("")
        self.horizontalLayout_14.addWidget(self.ScdetMode)
        self.gridLayout_20.addLayout(self.horizontalLayout_14, 0, 0, 1, 1)
        self.gridLayout_22.addWidget(self.groupBox_3, 0, 0, 1, 1)
        self.toolBox.addItem(self.ScdetSettings, "")
        self.OutputResizeSettings = QtWidgets.QWidget()
        self.OutputResizeSettings.setGeometry(QtCore.QRect(0, 0, 553, 440))
        self.OutputResizeSettings.setObjectName("OutputResizeSettings")
        self.gridLayout_28 = QtWidgets.QGridLayout(self.OutputResizeSettings)
        self.gridLayout_28.setObjectName("gridLayout_28")
        self.SrField = QtWidgets.QGroupBox(self.OutputResizeSettings)
        self.SrField.setTitle("")
        self.SrField.setObjectName("SrField")
        self.gridLayout_26 = QtWidgets.QGridLayout(self.SrField)
        self.gridLayout_26.setObjectName("gridLayout_26")
        self.label_6 = QtWidgets.QLabel(self.SrField)
        self.label_6.setScaledContents(False)
        self.label_6.setAlignment(QtCore.Qt.AlignCenter)
        self.label_6.setObjectName("label_6")
        self.gridLayout_26.addWidget(self.label_6, 5, 0, 1, 1)
        self.label_8 = QtWidgets.QLabel(self.SrField)
        self.label_8.setScaledContents(False)
        self.label_8.setAlignment(QtCore.Qt.AlignCenter)
        self.label_8.setObjectName("label_8")
        self.gridLayout_26.addWidget(self.label_8, 2, 0, 1, 1)
        self.AiSrSelector = MyComboBox(self.SrField)
        self.AiSrSelector.setObjectName("AiSrSelector")
        self.AiSrSelector.addItem("")
        self.AiSrSelector.addItem("")
        self.gridLayout_26.addWidget(self.AiSrSelector, 2, 1, 1, 1)
        self.AiSrMode = MyComboBox(self.SrField)
        self.AiSrMode.setObjectName("AiSrMode")
        self.AiSrMode.addItem("")
        self.AiSrMode.addItem("")
        self.gridLayout_26.addWidget(self.AiSrMode, 5, 1, 1, 1)
        self.label_9 = QtWidgets.QLabel(self.SrField)
        self.label_9.setAcceptDrops(False)
        self.label_9.setScaledContents(False)
        self.label_9.setAlignment(QtCore.Qt.AlignCenter)
        self.label_9.setObjectName("label_9")
        self.gridLayout_26.addWidget(self.label_9, 3, 0, 1, 1)
        self.AiSrModuleSelector = MyComboBox(self.SrField)
        self.AiSrModuleSelector.setObjectName("AiSrModuleSelector")
        self.gridLayout_26.addWidget(self.AiSrModuleSelector, 3, 1, 1, 1)
        self.gridLayout_28.addWidget(self.SrField, 2, 0, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_28.addItem(spacerItem2, 3, 0, 1, 1)
        self.groupBox_4 = QtWidgets.QGroupBox(self.OutputResizeSettings)
        self.groupBox_4.setTitle("")
        self.groupBox_4.setObjectName("groupBox_4")
        self.gridLayout_21 = QtWidgets.QGridLayout(self.groupBox_4)
        self.gridLayout_21.setObjectName("gridLayout_21")
        self.gridLayout_4 = QtWidgets.QGridLayout()
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.ResizeReminder = QtWidgets.QLabel(self.groupBox_4)
        self.ResizeReminder.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.ResizeReminder.setObjectName("ResizeReminder")
        self.gridLayout_4.addWidget(self.ResizeReminder, 0, 0, 1, 1)
        self.CropReminder = QtWidgets.QLabel(self.groupBox_4)
        self.CropReminder.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.CropReminder.setObjectName("CropReminder")
        self.gridLayout_4.addWidget(self.CropReminder, 5, 0, 1, 1)
        self.horizontalLayout_11 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_11.setObjectName("horizontalLayout_11")
        self.label_5 = QtWidgets.QLabel(self.groupBox_4)
        self.label_5.setAlignment(QtCore.Qt.AlignCenter)
        self.label_5.setObjectName("label_5")
        self.horizontalLayout_11.addWidget(self.label_5)
        self.CropHeightSettings = MySpinBox(self.groupBox_4)
        self.CropHeightSettings.setMaximum(100000)
        self.CropHeightSettings.setObjectName("CropHeightSettings")
        self.horizontalLayout_11.addWidget(self.CropHeightSettings)
        self.gridLayout_4.addLayout(self.horizontalLayout_11, 6, 1, 1, 1)
        self.horizontalLayout_13 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_13.setObjectName("horizontalLayout_13")
        self.label_7 = QtWidgets.QLabel(self.groupBox_4)
        self.label_7.setAlignment(QtCore.Qt.AlignCenter)
        self.label_7.setObjectName("label_7")
        self.horizontalLayout_13.addWidget(self.label_7)
        self.CropWidthpSettings = MySpinBox(self.groupBox_4)
        self.CropWidthpSettings.setMaximum(100000)
        self.CropWidthpSettings.setObjectName("CropWidthpSettings")
        self.horizontalLayout_13.addWidget(self.CropWidthpSettings)
        self.gridLayout_4.addLayout(self.horizontalLayout_13, 6, 0, 1, 1)
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.label_4 = QtWidgets.QLabel(self.groupBox_4)
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName("label_4")
        self.horizontalLayout_10.addWidget(self.label_4)
        self.ResizeHeightSettings = MySpinBox(self.groupBox_4)
        self.ResizeHeightSettings.setMaximum(100000)
        self.ResizeHeightSettings.setObjectName("ResizeHeightSettings")
        self.horizontalLayout_10.addWidget(self.ResizeHeightSettings)
        self.gridLayout_4.addLayout(self.horizontalLayout_10, 1, 1, 1, 1)
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.label_3 = QtWidgets.QLabel(self.groupBox_4)
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_9.addWidget(self.label_3)
        self.ResizeWidthSettings = MySpinBox(self.groupBox_4)
        self.ResizeWidthSettings.setMaximum(100000)
        self.ResizeWidthSettings.setObjectName("ResizeWidthSettings")
        self.horizontalLayout_9.addWidget(self.ResizeWidthSettings)
        self.gridLayout_4.addLayout(self.horizontalLayout_9, 1, 0, 1, 1)
        self.gridLayout_21.addLayout(self.gridLayout_4, 1, 0, 1, 1)
        self.ResizeTemplate = QtWidgets.QComboBox(self.groupBox_4)
        self.ResizeTemplate.setObjectName("ResizeTemplate")
        self.ResizeTemplate.addItem("")
        self.ResizeTemplate.addItem("")
        self.ResizeTemplate.addItem("")
        self.ResizeTemplate.addItem("")
        self.ResizeTemplate.addItem("")
        self.ResizeTemplate.addItem("")
        self.ResizeTemplate.addItem("")
        self.ResizeTemplate.addItem("")
        self.ResizeTemplate.addItem("")
        self.ResizeTemplate.addItem("")
        self.gridLayout_21.addWidget(self.ResizeTemplate, 0, 0, 1, 1)
        self.gridLayout_28.addWidget(self.groupBox_4, 0, 0, 1, 1)
        self.UseAiSR = QtWidgets.QCheckBox(self.OutputResizeSettings)
        self.UseAiSR.setObjectName("UseAiSR")
        self.gridLayout_28.addWidget(self.UseAiSR, 1, 0, 1, 1)
        self.toolBox.addItem(self.OutputResizeSettings, "")
        self.RenderSettings = QtWidgets.QWidget()
        self.RenderSettings.setGeometry(QtCore.QRect(0, 0, 536, 450))
        self.RenderSettings.setObjectName("RenderSettings")
        self.gridLayout_29 = QtWidgets.QGridLayout(self.RenderSettings)
        self.gridLayout_29.setObjectName("gridLayout_29")
        self.RenderSettingsGroup = QtWidgets.QGroupBox(self.RenderSettings)
        self.RenderSettingsGroup.setTitle("")
        self.RenderSettingsGroup.setObjectName("RenderSettingsGroup")
        self.gridLayout_27 = QtWidgets.QGridLayout(self.RenderSettingsGroup)
        self.gridLayout_27.setObjectName("gridLayout_27")
        self.gridLayout_12 = QtWidgets.QGridLayout()
        self.gridLayout_12.setObjectName("gridLayout_12")
        self.label_26 = QtWidgets.QLabel(self.RenderSettingsGroup)
        self.label_26.setObjectName("label_26")
        self.gridLayout_12.addWidget(self.label_26, 2, 0, 1, 1)
        self.SlowmotionFPS = QtWidgets.QLineEdit(self.RenderSettingsGroup)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.SlowmotionFPS.sizePolicy().hasHeightForWidth())
        self.SlowmotionFPS.setSizePolicy(sizePolicy)
        self.SlowmotionFPS.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.SlowmotionFPS.setObjectName("SlowmotionFPS")
        self.gridLayout_12.addWidget(self.SlowmotionFPS, 8, 1, 1, 1)
        self.FFmpegCustomer = QtWidgets.QLineEdit(self.RenderSettingsGroup)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.FFmpegCustomer.sizePolicy().hasHeightForWidth())
        self.FFmpegCustomer.setSizePolicy(sizePolicy)
        self.FFmpegCustomer.setObjectName("FFmpegCustomer")
        self.gridLayout_12.addWidget(self.FFmpegCustomer, 10, 1, 1, 1)
        self.horizontalLayout_28 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_28.setObjectName("horizontalLayout_28")
        self.BufferSizeSelector = QtWidgets.QSpinBox(self.RenderSettingsGroup)
        self.BufferSizeSelector.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.BufferSizeSelector.sizePolicy().hasHeightForWidth())
        self.BufferSizeSelector.setSizePolicy(sizePolicy)
        self.BufferSizeSelector.setMinimum(1)
        self.BufferSizeSelector.setMaximum(500)
        self.BufferSizeSelector.setSingleStep(1)
        self.BufferSizeSelector.setProperty("value", 1)
        self.BufferSizeSelector.setObjectName("BufferSizeSelector")
        self.horizontalLayout_28.addWidget(self.BufferSizeSelector)
        self.label_28 = QtWidgets.QLabel(self.RenderSettingsGroup)
        self.label_28.setObjectName("label_28")
        self.horizontalLayout_28.addWidget(self.label_28)
        self.gridLayout_12.addLayout(self.horizontalLayout_28, 3, 1, 1, 1)
        self.horizontalLayout_26 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_26.setObjectName("horizontalLayout_26")
        self.RenderGapSelector = MySpinBox(self.RenderSettingsGroup)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.RenderGapSelector.sizePolicy().hasHeightForWidth())
        self.RenderGapSelector.setSizePolicy(sizePolicy)
        self.RenderGapSelector.setMinimum(100)
        self.RenderGapSelector.setMaximum(999999999)
        self.RenderGapSelector.setSingleStep(100)
        self.RenderGapSelector.setProperty("value", 1000)
        self.RenderGapSelector.setObjectName("RenderGapSelector")
        self.horizontalLayout_26.addWidget(self.RenderGapSelector)
        self.label_27 = QtWidgets.QLabel(self.RenderSettingsGroup)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_27.sizePolicy().hasHeightForWidth())
        self.label_27.setSizePolicy(sizePolicy)
        self.label_27.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.label_27.setObjectName("label_27")
        self.horizontalLayout_26.addWidget(self.label_27)
        self.gridLayout_12.addLayout(self.horizontalLayout_26, 2, 1, 1, 1)
        self.MBufferChecker = QtWidgets.QCheckBox(self.RenderSettingsGroup)
        self.MBufferChecker.setObjectName("MBufferChecker")
        self.gridLayout_12.addWidget(self.MBufferChecker, 3, 0, 1, 1)
        self.label_30 = QtWidgets.QLabel(self.RenderSettingsGroup)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_30.sizePolicy().hasHeightForWidth())
        self.label_30.setSizePolicy(sizePolicy)
        self.label_30.setObjectName("label_30")
        self.gridLayout_12.addWidget(self.label_30, 10, 0, 1, 1)
        self.slowmotion = QtWidgets.QCheckBox(self.RenderSettingsGroup)
        self.slowmotion.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.slowmotion.setObjectName("slowmotion")
        self.gridLayout_12.addWidget(self.slowmotion, 8, 0, 1, 1)
        self.KeepChunksChecker = QtWidgets.QCheckBox(self.RenderSettingsGroup)
        self.KeepChunksChecker.setObjectName("KeepChunksChecker")
        self.gridLayout_12.addWidget(self.KeepChunksChecker, 9, 0, 1, 1)
        self.gridLayout_27.addLayout(self.gridLayout_12, 0, 0, 1, 1)
        self.gridLayout_29.addWidget(self.RenderSettingsGroup, 3, 0, 1, 1)
        self.EncodeSettingsLabel = QtWidgets.QLabel(self.RenderSettings)
        self.EncodeSettingsLabel.setObjectName("EncodeSettingsLabel")
        self.gridLayout_29.addWidget(self.EncodeSettingsLabel, 0, 0, 1, 1)
        self.groupBox_7 = QtWidgets.QGroupBox(self.RenderSettings)
        self.groupBox_7.setTitle("")
        self.groupBox_7.setObjectName("groupBox_7")
        self.gridLayout_32 = QtWidgets.QGridLayout(self.groupBox_7)
        self.gridLayout_32.setObjectName("gridLayout_32")
        self.EncoderSelector = MyComboBox(self.groupBox_7)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.EncoderSelector.sizePolicy().hasHeightForWidth())
        self.EncoderSelector.setSizePolicy(sizePolicy)
        self.EncoderSelector.setObjectName("EncoderSelector")
        self.EncoderSelector.addItem("")
        self.gridLayout_32.addWidget(self.EncoderSelector, 7, 1, 1, 1)
        self.label_25 = QtWidgets.QLabel(self.groupBox_7)
        self.label_25.setObjectName("label_25")
        self.gridLayout_32.addWidget(self.label_25, 6, 0, 1, 1)
        self.QuickExtractChecker = QtWidgets.QCheckBox(self.groupBox_7)
        self.QuickExtractChecker.setChecked(True)
        self.QuickExtractChecker.setObjectName("QuickExtractChecker")
        self.gridLayout_32.addWidget(self.QuickExtractChecker, 12, 0, 1, 1)
        self.HwaccelPresetSelector = MyComboBox(self.groupBox_7)
        self.HwaccelPresetSelector.setObjectName("HwaccelPresetSelector")
        self.HwaccelPresetSelector.addItem("")
        self.HwaccelPresetSelector.addItem("")
        self.HwaccelPresetSelector.addItem("")
        self.HwaccelPresetSelector.addItem("")
        self.gridLayout_32.addWidget(self.HwaccelPresetSelector, 11, 1, 1, 1)
        self.PresetReminder = QtWidgets.QLabel(self.groupBox_7)
        self.PresetReminder.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.PresetReminder.setObjectName("PresetReminder")
        self.gridLayout_32.addWidget(self.PresetReminder, 10, 0, 1, 1)
        self.HwaccelSelector = QtWidgets.QComboBox(self.groupBox_7)
        self.HwaccelSelector.setObjectName("HwaccelSelector")
        self.HwaccelSelector.addItem("")
        self.HwaccelSelector.addItem("")
        self.HwaccelSelector.addItem("")
        self.gridLayout_32.addWidget(self.HwaccelSelector, 6, 1, 1, 1)
        self.CRFSelector = MySpinBox(self.groupBox_7)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.CRFSelector.sizePolicy().hasHeightForWidth())
        self.CRFSelector.setSizePolicy(sizePolicy)
        self.CRFSelector.setMinimum(0)
        self.CRFSelector.setMaximum(51)
        self.CRFSelector.setProperty("value", 16)
        self.CRFSelector.setObjectName("CRFSelector")
        self.gridLayout_32.addWidget(self.CRFSelector, 1, 1, 1, 1)
        self.PresetSelector = MyComboBox(self.groupBox_7)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.PresetSelector.sizePolicy().hasHeightForWidth())
        self.PresetSelector.setSizePolicy(sizePolicy)
        self.PresetSelector.setObjectName("PresetSelector")
        self.PresetSelector.addItem("")
        self.gridLayout_32.addWidget(self.PresetSelector, 10, 1, 1, 1)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.BitrateSelector = MyDoubleSpinBox(self.groupBox_7)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.BitrateSelector.sizePolicy().hasHeightForWidth())
        self.BitrateSelector.setSizePolicy(sizePolicy)
        self.BitrateSelector.setMaximum(1000000.0)
        self.BitrateSelector.setProperty("value", 90.0)
        self.BitrateSelector.setObjectName("BitrateSelector")
        self.horizontalLayout_4.addWidget(self.BitrateSelector)
        self.TargetBitrateMeasure = QtWidgets.QLabel(self.groupBox_7)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.TargetBitrateMeasure.sizePolicy().hasHeightForWidth())
        self.TargetBitrateMeasure.setSizePolicy(sizePolicy)
        self.TargetBitrateMeasure.setObjectName("TargetBitrateMeasure")
        self.horizontalLayout_4.addWidget(self.TargetBitrateMeasure)
        self.gridLayout_32.addLayout(self.horizontalLayout_4, 4, 1, 1, 1)
        self.horizontalLayout_15 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_15.setObjectName("horizontalLayout_15")
        self.UseEncodeThread = QtWidgets.QCheckBox(self.groupBox_7)
        self.UseEncodeThread.setObjectName("UseEncodeThread")
        self.horizontalLayout_15.addWidget(self.UseEncodeThread)
        self.EncodeThreadSelector = QtWidgets.QSpinBox(self.groupBox_7)
        self.EncodeThreadSelector.setObjectName("EncodeThreadSelector")
        self.horizontalLayout_15.addWidget(self.EncodeThreadSelector)
        self.gridLayout_32.addLayout(self.horizontalLayout_15, 13, 1, 1, 1)
        self.UseCRF = QtWidgets.QRadioButton(self.groupBox_7)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.UseCRF.sizePolicy().hasHeightForWidth())
        self.UseCRF.setSizePolicy(sizePolicy)
        self.UseCRF.setToolTip("")
        self.UseCRF.setChecked(True)
        self.UseCRF.setObjectName("UseCRF")
        self.gridLayout_32.addWidget(self.UseCRF, 1, 0, 1, 1)
        self.StrictModeChecker = QtWidgets.QCheckBox(self.groupBox_7)
        self.StrictModeChecker.setObjectName("StrictModeChecker")
        self.gridLayout_32.addWidget(self.StrictModeChecker, 12, 1, 1, 1)
        self.UseTargetBitrate = QtWidgets.QRadioButton(self.groupBox_7)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.UseTargetBitrate.sizePolicy().hasHeightForWidth())
        self.UseTargetBitrate.setSizePolicy(sizePolicy)
        self.UseTargetBitrate.setObjectName("UseTargetBitrate")
        self.gridLayout_32.addWidget(self.UseTargetBitrate, 4, 0, 1, 1)
        self.HwaccelDecode = QtWidgets.QCheckBox(self.groupBox_7)
        self.HwaccelDecode.setChecked(True)
        self.HwaccelDecode.setObjectName("HwaccelDecode")
        self.gridLayout_32.addWidget(self.HwaccelDecode, 13, 0, 1, 1)
        self.EncoderReminder = QtWidgets.QLabel(self.groupBox_7)
        self.EncoderReminder.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.EncoderReminder.setObjectName("EncoderReminder")
        self.gridLayout_32.addWidget(self.EncoderReminder, 7, 0, 1, 1)
        self.HwaccelPresetLabel = QtWidgets.QLabel(self.groupBox_7)
        self.HwaccelPresetLabel.setObjectName("HwaccelPresetLabel")
        self.gridLayout_32.addWidget(self.HwaccelPresetLabel, 11, 0, 1, 1)
        self.FastDenoiseChecker = QtWidgets.QCheckBox(self.groupBox_7)
        self.FastDenoiseChecker.setObjectName("FastDenoiseChecker")
        self.gridLayout_32.addWidget(self.FastDenoiseChecker, 14, 0, 1, 1)
        self.gridLayout_29.addWidget(self.groupBox_7, 1, 0, 1, 1)
        self.RenderSettingsLabel = QtWidgets.QLabel(self.RenderSettings)
        self.RenderSettingsLabel.setObjectName("RenderSettingsLabel")
        self.gridLayout_29.addWidget(self.RenderSettingsLabel, 2, 0, 1, 1)
        spacerItem3 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_29.addItem(spacerItem3, 4, 0, 1, 1)
        self.toolBox.addItem(self.RenderSettings, "")
        self.RIFESettings = QtWidgets.QWidget()
        self.RIFESettings.setGeometry(QtCore.QRect(0, 0, 553, 440))
        self.RIFESettings.setObjectName("RIFESettings")
        self.gridLayout_30 = QtWidgets.QGridLayout(self.RIFESettings)
        self.gridLayout_30.setObjectName("gridLayout_30")
        self.groupBox_6 = QtWidgets.QGroupBox(self.RIFESettings)
        self.groupBox_6.setTitle("")
        self.groupBox_6.setObjectName("groupBox_6")
        self.gridLayout_31 = QtWidgets.QGridLayout(self.groupBox_6)
        self.gridLayout_31.setObjectName("gridLayout_31")
        self.gridLayout_5 = QtWidgets.QGridLayout()
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.InterpScaleSelector = MyComboBox(self.groupBox_6)
        self.InterpScaleSelector.setObjectName("InterpScaleSelector")
        self.InterpScaleSelector.addItem("")
        self.InterpScaleSelector.addItem("")
        self.InterpScaleSelector.addItem("")
        self.InterpScaleSelector.addItem("")
        self.InterpScaleSelector.addItem("")
        self.gridLayout_5.addWidget(self.InterpScaleSelector, 2, 1, 1, 1)
        self.label_32 = QtWidgets.QLabel(self.groupBox_6)
        self.label_32.setObjectName("label_32")
        self.gridLayout_5.addWidget(self.label_32, 4, 0, 1, 1)
        self.ModuleSelector = MyComboBox(self.groupBox_6)
        self.ModuleSelector.setObjectName("ModuleSelector")
        self.gridLayout_5.addWidget(self.ModuleSelector, 3, 1, 1, 1)
        self.label_31 = QtWidgets.QLabel(self.groupBox_6)
        self.label_31.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.label_31.setObjectName("label_31")
        self.gridLayout_5.addWidget(self.label_31, 3, 0, 1, 1)
        self.DiscreteCardSelector = MyComboBox(self.groupBox_6)
        self.DiscreteCardSelector.setObjectName("DiscreteCardSelector")
        self.gridLayout_5.addWidget(self.DiscreteCardSelector, 4, 1, 1, 1)
        self.InterpScaleReminder = QtWidgets.QLabel(self.groupBox_6)
        self.InterpScaleReminder.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.InterpScaleReminder.setObjectName("InterpScaleReminder")
        self.gridLayout_5.addWidget(self.InterpScaleReminder, 2, 0, 1, 1)
        self.FP16Checker = QtWidgets.QCheckBox(self.groupBox_6)
        self.FP16Checker.setAcceptDrops(True)
        self.FP16Checker.setObjectName("FP16Checker")
        self.gridLayout_5.addWidget(self.FP16Checker, 0, 0, 1, 1)
        self.ReverseChecker = QtWidgets.QCheckBox(self.groupBox_6)
        self.ReverseChecker.setObjectName("ReverseChecker")
        self.gridLayout_5.addWidget(self.ReverseChecker, 1, 0, 1, 1)
        self.AutoInterpScaleChecker = QtWidgets.QCheckBox(self.groupBox_6)
        self.AutoInterpScaleChecker.setObjectName("AutoInterpScaleChecker")
        self.gridLayout_5.addWidget(self.AutoInterpScaleChecker, 1, 1, 1, 1)
        self.ForwardEnsembleChecker = QtWidgets.QCheckBox(self.groupBox_6)
        self.ForwardEnsembleChecker.setObjectName("ForwardEnsembleChecker")
        self.gridLayout_5.addWidget(self.ForwardEnsembleChecker, 0, 1, 1, 1)
        self.gridLayout_31.addLayout(self.gridLayout_5, 0, 0, 1, 1)
        self.AMDSettingsLabel = QtWidgets.QLabel(self.groupBox_6)
        self.AMDSettingsLabel.setObjectName("AMDSettingsLabel")
        self.gridLayout_31.addWidget(self.AMDSettingsLabel, 2, 0, 1, 1)
        self.line_6 = QtWidgets.QFrame(self.groupBox_6)
        self.line_6.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_6.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_6.setObjectName("line_6")
        self.gridLayout_31.addWidget(self.line_6, 1, 0, 1, 1)
        self.gridLayout_11 = QtWidgets.QGridLayout()
        self.gridLayout_11.setObjectName("gridLayout_11")
        self.TtaModeChecker = QtWidgets.QCheckBox(self.groupBox_6)
        self.TtaModeChecker.setObjectName("TtaModeChecker")
        self.gridLayout_11.addWidget(self.TtaModeChecker, 3, 0, 1, 1)
        self.ncnnInterpThreadCnt = MySpinBox(self.groupBox_6)
        self.ncnnInterpThreadCnt.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ncnnInterpThreadCnt.sizePolicy().hasHeightForWidth())
        self.ncnnInterpThreadCnt.setSizePolicy(sizePolicy)
        self.ncnnInterpThreadCnt.setProperty("value", 4)
        self.ncnnInterpThreadCnt.setObjectName("ncnnInterpThreadCnt")
        self.gridLayout_11.addWidget(self.ncnnInterpThreadCnt, 0, 1, 1, 1)
        self.label_34 = QtWidgets.QLabel(self.groupBox_6)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_34.sizePolicy().hasHeightForWidth())
        self.label_34.setSizePolicy(sizePolicy)
        self.label_34.setObjectName("label_34")
        self.gridLayout_11.addWidget(self.label_34, 0, 0, 1, 1)
        self.label_35 = QtWidgets.QLabel(self.groupBox_6)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_35.sizePolicy().hasHeightForWidth())
        self.label_35.setSizePolicy(sizePolicy)
        self.label_35.setObjectName("label_35")
        self.gridLayout_11.addWidget(self.label_35, 1, 0, 1, 1)
        self.ncnnSelectGPU = MySpinBox(self.groupBox_6)
        self.ncnnSelectGPU.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ncnnSelectGPU.sizePolicy().hasHeightForWidth())
        self.ncnnSelectGPU.setSizePolicy(sizePolicy)
        self.ncnnSelectGPU.setProperty("value", 0)
        self.ncnnSelectGPU.setObjectName("ncnnSelectGPU")
        self.gridLayout_11.addWidget(self.ncnnSelectGPU, 1, 1, 1, 1)
        self.gridLayout_31.addLayout(self.gridLayout_11, 3, 0, 1, 1)
        self.gridLayout_30.addWidget(self.groupBox_6, 0, 0, 1, 1)
        spacerItem4 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_30.addItem(spacerItem4, 1, 0, 1, 1)
        self.toolBox.addItem(self.RIFESettings, "")
        self.ToolBox = QtWidgets.QWidget()
        self.ToolBox.setGeometry(QtCore.QRect(0, 0, 536, 458))
        self.ToolBox.setObjectName("ToolBox")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.ToolBox)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.GIFLabel = QtWidgets.QLabel(self.ToolBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.GIFLabel.sizePolicy().hasHeightForWidth())
        self.GIFLabel.setSizePolicy(sizePolicy)
        self.GIFLabel.setObjectName("GIFLabel")
        self.gridLayout_7.addWidget(self.GIFLabel, 1, 0, 1, 1)
        self.gridLayout_16 = QtWidgets.QGridLayout()
        self.gridLayout_16.setObjectName("gridLayout_16")
        self.GifMaker = QtWidgets.QGroupBox(self.ToolBox)
        self.GifMaker.setTitle("")
        self.GifMaker.setObjectName("GifMaker")
        self.gridLayout_25 = QtWidgets.QGridLayout(self.GifMaker)
        self.gridLayout_25.setObjectName("gridLayout_25")
        self.GifInput = MyLineWidget(self.GifMaker)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.GifInput.sizePolicy().hasHeightForWidth())
        self.GifInput.setSizePolicy(sizePolicy)
        self.GifInput.setDragEnabled(True)
        self.GifInput.setObjectName("GifInput")
        self.gridLayout_25.addWidget(self.GifInput, 0, 0, 1, 1)
        self.GifButton = QtWidgets.QPushButton(self.GifMaker)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.GifButton.sizePolicy().hasHeightForWidth())
        self.GifButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Abril Fatface")
        font.setPointSize(12)
        self.GifButton.setFont(font)
        self.GifButton.setObjectName("GifButton")
        self.gridLayout_25.addWidget(self.GifButton, 4, 0, 1, 1)
        self.GifOutput = MyLineWidget(self.GifMaker)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.GifOutput.sizePolicy().hasHeightForWidth())
        self.GifOutput.setSizePolicy(sizePolicy)
        self.GifOutput.setDragEnabled(True)
        self.GifOutput.setObjectName("GifOutput")
        self.gridLayout_25.addWidget(self.GifOutput, 2, 0, 1, 1)
        self.GifLoopChecker = QtWidgets.QCheckBox(self.GifMaker)
        self.GifLoopChecker.setObjectName("GifLoopChecker")
        self.gridLayout_25.addWidget(self.GifLoopChecker, 3, 0, 1, 1)
        self.gridLayout_16.addWidget(self.GifMaker, 0, 0, 1, 1)
        self.VAConcat = QtWidgets.QGroupBox(self.ToolBox)
        self.VAConcat.setTitle("")
        self.VAConcat.setObjectName("VAConcat")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.VAConcat)
        self.verticalLayout.setObjectName("verticalLayout")
        self.ConcatInputV = MyLineWidget(self.VAConcat)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ConcatInputV.sizePolicy().hasHeightForWidth())
        self.ConcatInputV.setSizePolicy(sizePolicy)
        self.ConcatInputV.setDragEnabled(True)
        self.ConcatInputV.setObjectName("ConcatInputV")
        self.verticalLayout.addWidget(self.ConcatInputV)
        self.ConcatInputA = MyLineWidget(self.VAConcat)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ConcatInputA.sizePolicy().hasHeightForWidth())
        self.ConcatInputA.setSizePolicy(sizePolicy)
        self.ConcatInputA.setDragEnabled(True)
        self.ConcatInputA.setObjectName("ConcatInputA")
        self.verticalLayout.addWidget(self.ConcatInputA)
        self.OutputConcat = MyLineWidget(self.VAConcat)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.OutputConcat.sizePolicy().hasHeightForWidth())
        self.OutputConcat.setSizePolicy(sizePolicy)
        self.OutputConcat.setDragEnabled(True)
        self.OutputConcat.setObjectName("OutputConcat")
        self.verticalLayout.addWidget(self.OutputConcat)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.ConcatButton = QtWidgets.QPushButton(self.VAConcat)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ConcatButton.sizePolicy().hasHeightForWidth())
        self.ConcatButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Abril Fatface")
        font.setPointSize(12)
        self.ConcatButton.setFont(font)
        self.ConcatButton.setObjectName("ConcatButton")
        self.horizontalLayout_2.addWidget(self.ConcatButton)
        self.ConcatAllButton = QtWidgets.QPushButton(self.VAConcat)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ConcatAllButton.sizePolicy().hasHeightForWidth())
        self.ConcatAllButton.setSizePolicy(sizePolicy)
        self.ConcatAllButton.setObjectName("ConcatAllButton")
        self.horizontalLayout_2.addWidget(self.ConcatAllButton)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.gridLayout_16.addWidget(self.VAConcat, 2, 0, 1, 1)
        self.ConcatLabel = QtWidgets.QLabel(self.ToolBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ConcatLabel.sizePolicy().hasHeightForWidth())
        self.ConcatLabel.setSizePolicy(sizePolicy)
        self.ConcatLabel.setObjectName("ConcatLabel")
        self.gridLayout_16.addWidget(self.ConcatLabel, 1, 0, 1, 1)
        self.gridLayout_7.addLayout(self.gridLayout_16, 2, 0, 1, 1)
        self.groupBox_8 = QtWidgets.QGroupBox(self.ToolBox)
        self.groupBox_8.setTitle("")
        self.groupBox_8.setObjectName("groupBox_8")
        self.gridLayout_23 = QtWidgets.QGridLayout(self.groupBox_8)
        self.gridLayout_23.setObjectName("gridLayout_23")
        self.StartExtractButton = QtWidgets.QPushButton(self.groupBox_8)
        self.StartExtractButton.setObjectName("StartExtractButton")
        self.gridLayout_23.addWidget(self.StartExtractButton, 0, 0, 1, 1)
        self.gridLayout_7.addWidget(self.groupBox_8, 4, 0, 1, 1)
        self.ExtractLabel = QtWidgets.QLabel(self.ToolBox)
        self.ExtractLabel.setObjectName("ExtractLabel")
        self.gridLayout_7.addWidget(self.ExtractLabel, 3, 0, 1, 1)
        spacerItem5 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_7.addItem(spacerItem5, 7, 0, 1, 1)
        self.RenderOnlyGroupbox = QtWidgets.QGroupBox(self.ToolBox)
        self.RenderOnlyGroupbox.setTitle("")
        self.RenderOnlyGroupbox.setObjectName("RenderOnlyGroupbox")
        self.gridLayout_34 = QtWidgets.QGridLayout(self.RenderOnlyGroupbox)
        self.gridLayout_34.setObjectName("gridLayout_34")
        self.StartRenderButton = QtWidgets.QPushButton(self.RenderOnlyGroupbox)
        self.StartRenderButton.setObjectName("StartRenderButton")
        self.gridLayout_34.addWidget(self.StartRenderButton, 1, 0, 1, 1)
        self.label = QtWidgets.QLabel(self.RenderOnlyGroupbox)
        self.label.setObjectName("label")
        self.gridLayout_34.addWidget(self.label, 0, 0, 1, 1)
        self.gridLayout_7.addWidget(self.RenderOnlyGroupbox, 6, 0, 1, 1)
        self.toolBox.addItem(self.ToolBox, "")
        self.gridLayout_10.addWidget(self.toolBox, 1, 0, 1, 1)
        self.AdvanceSettingsArea.setWidget(self.AdvanceSettingsAreaWidget)
        self.gridLayout_17.addWidget(self.AdvanceSettingsArea, 0, 0, 1, 1)
        self.gridLayout_19.addWidget(self.splitter, 0, 0, 1, 1)
        self.tabWidget.addTab(self.step1, "")
        self.step3 = QtWidgets.QWidget()
        self.step3.setAcceptDrops(True)
        self.step3.setWhatsThis("")
        self.step3.setObjectName("step3")
        self.gridLayout_24 = QtWidgets.QGridLayout(self.step3)
        self.gridLayout_24.setObjectName("gridLayout_24")
        self.gridLayout_8 = QtWidgets.QGridLayout()
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.OptionCheck = MyTextWidget(self.step3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.OptionCheck.sizePolicy().hasHeightForWidth())
        self.OptionCheck.setSizePolicy(sizePolicy)
        self.OptionCheck.setAutoFormatting(QtWidgets.QTextEdit.AutoAll)
        self.OptionCheck.setReadOnly(True)
        self.OptionCheck.setObjectName("OptionCheck")
        self.gridLayout_8.addWidget(self.OptionCheck, 2, 0, 2, 2)
        self.ProgressBarVisibleControl = QtWidgets.QWidget(self.step3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ProgressBarVisibleControl.sizePolicy().hasHeightForWidth())
        self.ProgressBarVisibleControl.setSizePolicy(sizePolicy)
        self.ProgressBarVisibleControl.setObjectName("ProgressBarVisibleControl")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.ProgressBarVisibleControl)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.label_17 = QtWidgets.QLabel(self.ProgressBarVisibleControl)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_17.sizePolicy().hasHeightForWidth())
        self.label_17.setSizePolicy(sizePolicy)
        self.label_17.setObjectName("label_17")
        self.horizontalLayout_5.addWidget(self.label_17)
        self.progressBar = QtWidgets.QProgressBar(self.ProgressBarVisibleControl)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.progressBar.sizePolicy().hasHeightForWidth())
        self.progressBar.setSizePolicy(sizePolicy)
        self.progressBar.setMaximum(100)
        self.progressBar.setProperty("value", 0)
        self.progressBar.setObjectName("progressBar")
        self.horizontalLayout_5.addWidget(self.progressBar)
        self.gridLayout_8.addWidget(self.ProgressBarVisibleControl, 4, 0, 1, 1)
        self.gridLayout_33 = QtWidgets.QGridLayout()
        self.gridLayout_33.setObjectName("gridLayout_33")
        self.label_15 = QtWidgets.QLabel(self.step3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_15.sizePolicy().hasHeightForWidth())
        self.label_15.setSizePolicy(sizePolicy)
        self.label_15.setAlignment(QtCore.Qt.AlignBottom | QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft)
        self.label_15.setObjectName("label_15")
        self.gridLayout_33.addWidget(self.label_15, 0, 0, 1, 1)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        spacerItem6 = QtWidgets.QSpacerItem(20, 120, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout_2.addItem(spacerItem6)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        spacerItem7 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem7)
        self.KillProcButton = QtWidgets.QPushButton(self.step3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.KillProcButton.sizePolicy().hasHeightForWidth())
        self.KillProcButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Abril Fatface")
        font.setPointSize(20)
        self.KillProcButton.setFont(font)
        self.KillProcButton.setObjectName("KillProcButton")
        self.horizontalLayout_3.addWidget(self.KillProcButton)
        self.PauseProcess = QtWidgets.QPushButton(self.step3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.PauseProcess.sizePolicy().hasHeightForWidth())
        self.PauseProcess.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Abril Fatface")
        font.setPointSize(20)
        self.PauseProcess.setFont(font)
        self.PauseProcess.setObjectName("PauseProcess")
        self.horizontalLayout_3.addWidget(self.PauseProcess)
        self.verticalLayout_2.addLayout(self.horizontalLayout_3)
        self.gridLayout_33.addLayout(self.verticalLayout_2, 0, 1, 1, 1)
        self.gridLayout_8.addLayout(self.gridLayout_33, 1, 0, 1, 1)
        self.gridLayout_24.addLayout(self.gridLayout_8, 0, 0, 1, 1)
        self.tabWidget.addTab(self.step3, "")
        self.gridLayout_18.addWidget(self.tabWidget, 3, 0, 1, 1)
        self.gridLayout_6.addWidget(self.MainFrame, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1332, 23))
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        self.menu_2 = QtWidgets.QMenu(self.menubar)
        self.menu_2.setObjectName("menu_2")
        self.menuAboutSVFI = QtWidgets.QMenu(self.menubar)
        self.menuAboutSVFI.setObjectName("menuAboutSVFI")
        MainWindow.setMenuBar(self.menubar)
        self.actionImportVideos = QtWidgets.QAction(MainWindow)
        self.actionImportVideos.setObjectName("actionImportVideos")
        self.actionClearVideo = QtWidgets.QAction(MainWindow)
        self.actionClearVideo.setObjectName("actionClearVideo")
        self.actionClearAllVideos = QtWidgets.QAction(MainWindow)
        self.actionClearAllVideos.setObjectName("actionClearAllVideos")
        self.actionPreferences = QtWidgets.QAction(MainWindow)
        self.actionPreferences.setObjectName("actionPreferences")
        self.actionQuit = QtWidgets.QAction(MainWindow)
        self.actionQuit.setObjectName("actionQuit")
        self.actionStartProcess = QtWidgets.QAction(MainWindow)
        self.actionStartProcess.setObjectName("actionStartProcess")
        self.actionSelect_Start_Frames = QtWidgets.QAction(MainWindow)
        self.actionSelect_Start_Frames.setObjectName("actionSelect_Start_Frames")
        self.actionSelect_End_Frames = QtWidgets.QAction(MainWindow)
        self.actionSelect_End_Frames.setObjectName("actionSelect_End_Frames")
        self.actionSaveSettings = QtWidgets.QAction(MainWindow)
        self.actionSaveSettings.setObjectName("actionSaveSettings")
        self.actionLoadDefaultSettings = QtWidgets.QAction(MainWindow)
        self.actionLoadDefaultSettings.setObjectName("actionLoadDefaultSettings")
        self.actionErrorLog = QtWidgets.QAction(MainWindow)
        self.actionErrorLog.setObjectName("actionErrorLog")
        self.actionGetSupport = QtWidgets.QAction(MainWindow)
        self.actionGetSupport.setObjectName("actionGetSupport")
        self.actionManualGuide = QtWidgets.QAction(MainWindow)
        self.actionManualGuide.setObjectName("actionManualGuide")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionStopProcess = QtWidgets.QAction(MainWindow)
        self.actionStopProcess.setObjectName("actionStopProcess")
        self.menu.addAction(self.actionImportVideos)
        self.menu.addAction(self.actionClearVideo)
        self.menu.addAction(self.actionClearAllVideos)
        self.menu.addSeparator()
        self.menu.addAction(self.actionPreferences)
        self.menu.addSeparator()
        self.menu.addAction(self.actionQuit)
        self.menu_2.addAction(self.actionStartProcess)
        self.menu_2.addAction(self.actionStopProcess)
        self.menu_2.addSeparator()
        self.menu_2.addAction(self.actionSaveSettings)
        self.menu_2.addAction(self.actionLoadDefaultSettings)
        self.menuAboutSVFI.addAction(self.actionManualGuide)
        self.menuAboutSVFI.addAction(self.actionAbout)
        self.menubar.addAction(self.menu.menuAction())
        self.menubar.addAction(self.menu_2.menuAction())
        self.menubar.addAction(self.menuAboutSVFI.menuAction())

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        self.toolBox.setCurrentIndex(5)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.tabWidget, self.AutoSet)
        MainWindow.setTabOrder(self.AutoSet, self.StartPoint)
        MainWindow.setTabOrder(self.StartPoint, self.EndPoint)
        MainWindow.setTabOrder(self.EndPoint, self.StartChunk)
        MainWindow.setTabOrder(self.StartChunk, self.StartFrame)
        MainWindow.setTabOrder(self.StartFrame, self.RefreshStartInfo)
        MainWindow.setTabOrder(self.RefreshStartInfo, self.ScedetChecker)
        MainWindow.setTabOrder(self.ScedetChecker, self.ScdetSelector)
        MainWindow.setTabOrder(self.ScdetSelector, self.UseFixedScdet)
        MainWindow.setTabOrder(self.UseFixedScdet, self.ScdetMaxDiffSelector)
        MainWindow.setTabOrder(self.ScdetMaxDiffSelector, self.DupFramesTSelector)
        MainWindow.setTabOrder(self.DupFramesTSelector, self.ScdetUseMix)
        MainWindow.setTabOrder(self.ScdetUseMix, self.ScdetOutput)
        MainWindow.setTabOrder(self.ScdetOutput, self.ResizeTemplate)
        MainWindow.setTabOrder(self.ResizeTemplate, self.ResizeWidthSettings)
        MainWindow.setTabOrder(self.ResizeWidthSettings, self.ResizeHeightSettings)
        MainWindow.setTabOrder(self.ResizeHeightSettings, self.CropWidthpSettings)
        MainWindow.setTabOrder(self.CropWidthpSettings, self.CropHeightSettings)
        MainWindow.setTabOrder(self.CropHeightSettings, self.UseAiSR)
        MainWindow.setTabOrder(self.UseAiSR, self.AiSrSelector)
        MainWindow.setTabOrder(self.AiSrSelector, self.AiSrModuleSelector)
        MainWindow.setTabOrder(self.AiSrModuleSelector, self.AiSrMode)
        MainWindow.setTabOrder(self.AiSrMode, self.UseCRF)
        MainWindow.setTabOrder(self.UseCRF, self.CRFSelector)
        MainWindow.setTabOrder(self.CRFSelector, self.UseTargetBitrate)
        MainWindow.setTabOrder(self.UseTargetBitrate, self.BitrateSelector)
        MainWindow.setTabOrder(self.BitrateSelector, self.HwaccelSelector)
        MainWindow.setTabOrder(self.HwaccelSelector, self.EncoderSelector)
        MainWindow.setTabOrder(self.EncoderSelector, self.PresetSelector)
        MainWindow.setTabOrder(self.PresetSelector, self.HwaccelPresetSelector)
        MainWindow.setTabOrder(self.HwaccelPresetSelector, self.QuickExtractChecker)
        MainWindow.setTabOrder(self.QuickExtractChecker, self.StrictModeChecker)
        MainWindow.setTabOrder(self.StrictModeChecker, self.RenderGapSelector)
        MainWindow.setTabOrder(self.RenderGapSelector, self.MBufferChecker)
        MainWindow.setTabOrder(self.MBufferChecker, self.BufferSizeSelector)
        MainWindow.setTabOrder(self.BufferSizeSelector, self.slowmotion)
        MainWindow.setTabOrder(self.slowmotion, self.SlowmotionFPS)
        MainWindow.setTabOrder(self.SlowmotionFPS, self.KeepChunksChecker)
        MainWindow.setTabOrder(self.KeepChunksChecker, self.FFmpegCustomer)
        MainWindow.setTabOrder(self.FFmpegCustomer, self.FP16Checker)
        MainWindow.setTabOrder(self.FP16Checker, self.ReverseChecker)
        MainWindow.setTabOrder(self.ReverseChecker, self.AutoInterpScaleChecker)
        MainWindow.setTabOrder(self.AutoInterpScaleChecker, self.InterpScaleSelector)
        MainWindow.setTabOrder(self.InterpScaleSelector, self.ModuleSelector)
        MainWindow.setTabOrder(self.ModuleSelector, self.DiscreteCardSelector)
        MainWindow.setTabOrder(self.DiscreteCardSelector, self.ncnnInterpThreadCnt)
        MainWindow.setTabOrder(self.ncnnInterpThreadCnt, self.ncnnSelectGPU)
        MainWindow.setTabOrder(self.ncnnSelectGPU, self.TtaModeChecker)
        MainWindow.setTabOrder(self.TtaModeChecker, self.GifInput)
        MainWindow.setTabOrder(self.GifInput, self.DebugChecker)
        MainWindow.setTabOrder(self.DebugChecker, self.GifOutput)
        MainWindow.setTabOrder(self.GifOutput, self.GifButton)
        MainWindow.setTabOrder(self.GifButton, self.ConcatInputV)
        MainWindow.setTabOrder(self.ConcatInputV, self.ConcatInputA)
        MainWindow.setTabOrder(self.ConcatInputA, self.OutputConcat)
        MainWindow.setTabOrder(self.OutputConcat, self.ConcatButton)
        MainWindow.setTabOrder(self.ConcatButton, self.ConcatAllButton)
        MainWindow.setTabOrder(self.ConcatAllButton, self.StartExtractButton)
        MainWindow.setTabOrder(self.StartExtractButton, self.StartRenderButton)
        MainWindow.setTabOrder(self.StartRenderButton, self.OutputFolder)
        MainWindow.setTabOrder(self.OutputFolder, self.InputButton)
        MainWindow.setTabOrder(self.InputButton, self.InputDirButton)
        MainWindow.setTabOrder(self.InputDirButton, self.OutputButton)
        MainWindow.setTabOrder(self.OutputButton, self.ShowAdvance)
        MainWindow.setTabOrder(self.ShowAdvance, self.SaveAudioChecker)
        MainWindow.setTabOrder(self.SaveAudioChecker, self.ImgOutputChecker)
        MainWindow.setTabOrder(self.ImgOutputChecker, self.UseNCNNButton)
        MainWindow.setTabOrder(self.UseNCNNButton, self.ExtSelector)
        MainWindow.setTabOrder(self.ExtSelector, self.InputFPS)
        MainWindow.setTabOrder(self.InputFPS, self.ExpSelecter)
        MainWindow.setTabOrder(self.ExpSelecter, self.OutputFPS)
        MainWindow.setTabOrder(self.OutputFPS, self.AllInOne)
        MainWindow.setTabOrder(self.AllInOne, self.OutputSettingsButton)
        MainWindow.setTabOrder(self.OutputSettingsButton, self.KillProcButton)
        MainWindow.setTabOrder(self.KillProcButton, self.PauseProcess)
        MainWindow.setTabOrder(self.PauseProcess, self.OptionCheck)
        MainWindow.setTabOrder(self.OptionCheck, self.AdvanceSettingsArea)
        MainWindow.setTabOrder(self.AdvanceSettingsArea, self.ClearInputButton)
        MainWindow.setTabOrder(self.ClearInputButton, self.LoadCurrentSettings)
        MainWindow.setTabOrder(self.LoadCurrentSettings, self.InputFileName)
        MainWindow.setTabOrder(self.InputFileName, self.SaveCurrentSettings)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.OutputLabel.setText(_translate("MainWindow", "输出文件夹："))
        self.AllInOne.setText(_translate("MainWindow", "一键补帧"))
        self.UseNCNNButton.setToolTip(_translate("MainWindow", "强制使用检测到的A卡或核显"))
        self.UseNCNNButton.setText(_translate("MainWindow", "使用A卡或核显"))
        self.SaveAudioChecker.setText(_translate("MainWindow", "导出带音频、字幕"))
        self.ImgOutputChecker.setToolTip(_translate("MainWindow",
                                                    "<html><head/><body><p>输出为图片序列</p><p><span style=\" font-weight:600;\">命名格式:0&gt;8d,如 00000008.png</span></p></body></html>"))
        self.ImgOutputChecker.setText(_translate("MainWindow", "输出图片序列"))
        self.label_12.setToolTip(_translate("MainWindow",
                                            "<html><head/><body><p>如果音频合并出现问题，请尝试更换输出文件格式</p><p>mov兼容大多数音视频轨，但对字幕轨兼容不太好；</p><p>mkv兼容大多数字幕轨，但不支持pcm音频输出（这种情况请改为mov）</p><p>mp4支持流式传输，不支持truehd、dts等特种音频格式包装</p></body></html>"))
        self.label_12.setText(_translate("MainWindow", "输出文件格式"))
        self.ExtSelector.setToolTip(_translate("MainWindow",
                                               "<html><head/><body><p>如果音频合并出现问题，请尝试更换输出文件格式</p><p><span style=\" font-weight:600;\">mov</span>兼容大多数音视频轨，但对字幕轨兼容不太好；</p><p><span style=\" font-weight:600;\">mkv</span>兼容大多数字幕轨，但不支持pcm音频输出<span style=\" font-weight:600;\">（这种情况请改为mov）</span></p><p><span style=\" font-weight:600;\">mp4</span>支持流式传输，不支持truehd、dts等特种音频格式包装</p></body></html>"))
        self.ExtSelector.setItemText(0, _translate("MainWindow", "mp4"))
        self.ExtSelector.setItemText(1, _translate("MainWindow", "mkv"))
        self.ExtSelector.setItemText(2, _translate("MainWindow", "mov"))
        self.InputFPSReminder.setText(_translate("MainWindow", "输入帧率"))
        self.InputFPS.setPlaceholderText(_translate("MainWindow", "一定要确认输入帧率！"))
        self.InterpExpReminder.setToolTip(_translate("MainWindow",
                                                     "<html><head/><body><p>该倍率仅当输入为<span style=\" font-weight:600;\">图片序列时</span>生效，其余情况仅作为计算按钮</p><p>输入为图片序列时，会按照补帧倍率多倍复制图片输入到补帧流，并最终按照输出帧率压制输出</p></body></html>"))
        self.InterpExpReminder.setText(_translate("MainWindow", "补帧倍率："))
        self.ExpSelecter.setItemText(0, _translate("MainWindow", "x2"))
        self.ExpSelecter.setItemText(1, _translate("MainWindow", "x4"))
        self.ExpSelecter.setItemText(2, _translate("MainWindow", "x8"))
        self.ExpSelecter.setItemText(3, _translate("MainWindow", "x16"))
        self.ExpSelecter.setItemText(4, _translate("MainWindow", "x32"))
        self.ExpSelecter.setItemText(5, _translate("MainWindow", "x64"))
        self.OutputFPSReminder.setToolTip(_translate("MainWindow",
                                                     "<html><head/><body><p>当输入为<span style=\" font-weight:600;\">图片序列，</span>使用非输入帧率倍数的输出帧率可能会导致时长问题</p></body></html>"))
        self.OutputFPSReminder.setText(_translate("MainWindow", "输出帧率"))
        self.OutputFPS.setPlaceholderText(_translate("MainWindow", "一定要确认输出帧率"))
        self.InputButton.setText(_translate("MainWindow", "输入视频文件（支持批处理）"))
        self.InputDirButton.setToolTip(
            _translate("MainWindow", "<html><head/><body><p>不支持交错或带有透明通道的图片</p></body></html>"))
        self.InputDirButton.setText(_translate("MainWindow", "输入帧/图片序列"))
        self.OutputButton.setText(_translate("MainWindow", "设置输出文件夹"))
        self.ShowAdvance.setText(_translate("MainWindow", "显示高级选项"))
        self.OutputFolder.setPlaceholderText(_translate("MainWindow", "拖入补帧项目输出的文件夹路径（剩余磁盘空间建议20G+）"))
        self.InputLabel.setText(_translate("MainWindow", "输入文件或文件夹："))
        self.ClearInputButton.setText(_translate("MainWindow", "清除输入列表"))
        self.SaveCurrentSettings.setToolTip(
            _translate("MainWindow", "<html><head/><body><p>为该输入设置单独的参数文件；默认按照全局参数输出</p></body></html>"))
        self.SaveCurrentSettings.setText(_translate("MainWindow", "单独保存当前选中的输入设置"))
        self.LoadCurrentSettings.setText(_translate("MainWindow", "载入当前选中输入的设置"))
        self.OutputSettingsButton.setText(_translate("MainWindow", "导出当前设置到文本文件"))
        self.DebugChecker.setText(_translate("MainWindow", "Debug"))
        self.AdvanceSettingsLabel.setText(_translate("MainWindow", "高级设置"))
        self.EndPoint.setDisplayFormat(_translate("MainWindow", "HH:mm:ss"))
        self.label_22.setText(_translate("MainWindow", "起始区块计数：(-1自动)"))
        self.label_21.setToolTip(_translate("MainWindow",
                                            "<html><head/><body><p><span style=\" font-weight:600;\">进度恢复输入规则：</span></p><p>输出文件夹的最后一个chunk，第三个数字+1</p><p>e.g. 最后一个chunk是chunk-003-333-335.mp4，此栏输入336</p><p><br/></p></body></html>"))
        self.label_21.setText(_translate("MainWindow", "起始输入帧数：(-1自动)"))
        self.EndPointLabel.setText(_translate("MainWindow", "结束补帧时刻："))
        self.StartPoint.setDisplayFormat(_translate("MainWindow", "HH:mm:ss"))
        self.AutoSet.setText(_translate("MainWindow", "点我就完事了"))
        self.AutoSetReminder.setToolTip(
            _translate("MainWindow", "<html><head/><body><p>根据已经生成的视频块信息进行推算，可能存在重复补帧的情况，但不影响最终结果</p></body></html>"))
        self.AutoSetReminder.setText(_translate("MainWindow", "自动设置"))
        self.StartPointLabel.setText(_translate("MainWindow", "起始补帧时刻："))
        self.RefreshStartInfo.setText(_translate("MainWindow", "复原"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.ResumeSettings), _translate("MainWindow", "工作状态恢复"))
        self.ScdetMaxDiffSelector.setToolTip(_translate("MainWindow",
                                                        "<html><head/><body><p>勾选此项，将使用固定单一画面相似度指标进行转场识别</p><p>建议值：<span style=\" font-weight:600;\">40~80</span></p></body></html>"))
        self.UseFixedScdet.setToolTip(_translate("MainWindow",
                                                 "<html><head/><body><p>勾选此项，将使用固定单一画面相似度指标进行转场识别</p><p>建议值：<span style=\" font-weight:600;\">20~40</span></p><p><span style=\" font-weight:600;\">需配合“开启转场识别”使用</span></p></body></html>"))
        self.UseFixedScdet.setText(_translate("MainWindow", "使用固定转场识别"))
        self.DupRmMode.setToolTip(_translate("MainWindow",
                                             "<html><head/><body><p><span style=\" font-weight:600;\">不去除重复帧：</span>最大限度保留所有原始帧，建议用于任何形式的<span style=\" font-weight:600;\">长片电影</span><br/><span style=\" font-weight:600;\">单一识别：</span>使用单一的画面相似度阈值检测转场。建议用于画面非常复杂、转场特别多的素材，如用于发布的<span style=\" font-weight:600;\">混剪作品</span></p><p><span style=\" font-weight:600;\">去除一拍二：</span>去除原输入中以三帧为一组的所有相邻的重复帧，如AAABBBCCC去除后为ABC，推荐<span style=\" font-weight:600;\">仅适用于2D输入</span></p><p><span style=\" font-weight:600;\">去除一拍N：</span>去除原输入中所有可能相邻的重复帧。该模式输出最为流畅。<span style=\" font-weight:600;\">仅适用于2D输入。</span></p></body></html>"))
        self.DupRmMode.setItemText(0, _translate("MainWindow", "不去除重复帧"))
        self.DupRmMode.setItemText(1, _translate("MainWindow", "单一识别"))
        self.DupRmMode.setItemText(2, _translate("MainWindow", "去除一拍二"))
        self.DupRmMode.setItemText(3, _translate("MainWindow", "去除一拍三"))
        self.DupRmMode.setItemText(4, _translate("MainWindow", "去除一拍四"))
        self.DupRmMode.setItemText(5, _translate("MainWindow", "去除一拍五"))
        self.DupRmMode.setItemText(6, _translate("MainWindow", "去除一拍六"))
        self.DupRmMode.setItemText(7, _translate("MainWindow", "去除一拍七"))
        self.DupFramesTSelector.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.ScdetSelector.setToolTip(
            _translate("MainWindow", "<html><head/><body><p>通过自研算法进行转场识别，此项为动态阈值，</p></body></html>"))
        self.ScdetFlowLen.setItemText(0, _translate("MainWindow", "2D输入"))
        self.ScdetFlowLen.setItemText(1, _translate("MainWindow", "3D输入"))
        self.ScedetChecker.setToolTip(_translate("MainWindow",
                                                 "<html><head/><body><p><span style=\" font-weight:600;\">输入参考值为9~15</span></p><p>电影（长时间）实拍（3D）补帧项目：<span style=\" font-weight:600;\">建议值10~12</span></p><p>快速运动画面：<span style=\" font-weight:600;\">建议值12~15</span></p><p>2D（动漫等，不包括3D动画）输入：<span style=\" font-weight:600;\">建议值10~15</span></p><p>画面平均运动速度越大，取值越小</p></body></html>"))
        self.ScedetChecker.setText(_translate("MainWindow", "开启转场识别"))
        self.DupRmLabel.setToolTip(_translate("MainWindow",
                                              "<html><head/><body><p>N+2种模式，<span style=\" font-weight:600;\">建议仅用于2D输入。</span></p><p><span style=\" font-weight:600;\">去除一拍二~一拍N模式（仅为内测/订阅会员开放）：</span></p><p>如果你不确定你的动漫是一拍几，选<span style=\" font-weight:600;\">一拍三~一拍七即可</span></p><p>N越高，计算量越大，补帧速度可能越慢</p><p><span style=\" font-weight:600;\">单一识别模式：</span></p><p>轻度流畅优化：<span style=\" font-weight:600;\">0.1~1.0</span></p><p>中度流畅优化：<span style=\" font-weight:600;\">1.0~2.0</span></p><p>重度优化（会破坏运动节奏，并导致人物嘴部动画鬼畜，但很流畅）：<span style=\" font-weight:600;\">2.0及以上</span></p><p><span style=\" font-weight:600;\">去除一拍N模式下的画面比单一识别模式显著流畅，同时没有单一模式的问题（鬼畜等）</span></p></body></html>"))
        self.DupRmLabel.setText(_translate("MainWindow", "重复帧去除"))
        self.ScdetUseMix.setToolTip(_translate("MainWindow",
                                               "<html><head/><body><p>若识别到转场，对转场处的帧序列使用帧混合</p><p>勾选此选项可缓解转场识别误判导致的<span style=\" font-weight:600;\">卡顿问题，推荐用于混剪作品</span></p></body></html>"))
        self.ScdetUseMix.setText(_translate("MainWindow", "转场使用帧混合"))
        self.ScdetOutput.setToolTip(
            _translate("MainWindow", "<html><head/><body><p>在项目文件夹下输出识别到的转场帧及其前一帧</p></body></html>"))
        self.ScdetOutput.setText(_translate("MainWindow", "输出转场帧"))
        self.ScdetModeLabel.setToolTip(_translate("MainWindow",
                                                  "<html><head/><body><p><span style=\" font-weight:600;\">旧：</span></p><p>旧转场识别模式<br/><span style=\" font-weight:600;\">3D输入</span>建议值为<span style=\" font-weight:600;\">9~15</span></p><p><span style=\" font-weight:600;\">2D输入</span>建议值为<span style=\" font-weight:600;\">20左右</span></p><p><br/></p><p><span style=\" font-weight:600;\">新：</span></p><p><span style=\" font-weight:600;\">别用</span></p></body></html>"))
        self.ScdetModeLabel.setText(_translate("MainWindow", "选择转场识别模式"))
        self.ScdetMode.setItemText(0, _translate("MainWindow", "旧"))
        self.ScdetMode.setItemText(1, _translate("MainWindow", "新（待调整）"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.ScdetSettings), _translate("MainWindow", "转场识别与动漫优化"))
        self.label_6.setText(_translate("MainWindow", "超分模式"))
        self.label_8.setToolTip(
            _translate("MainWindow", "<html><head/><body><p>waifu2x适用于2D动漫输入</p><p>realSR适用于3D实拍</p></body></html>"))
        self.label_8.setText(_translate("MainWindow", "超分算法"))
        self.AiSrSelector.setItemText(0, _translate("MainWindow", "waifu2x"))
        self.AiSrSelector.setItemText(1, _translate("MainWindow", "RealSR"))
        self.AiSrMode.setItemText(0, _translate("MainWindow", "先超分后补帧"))
        self.AiSrMode.setItemText(1, _translate("MainWindow", "先补帧后超分"))
        self.label_9.setToolTip(_translate("MainWindow",
                                           "<html><head/><body><p><span style=\" font-weight:600;\">waifu2x:</span></p><p>cunet模型用于动漫超分</p><p>photo模型用于实拍</p><p>style anime用于老动漫</p><p><span style=\" font-weight:600;\">realSR：</span></p><p>带jpg的是用来处理jpg输入的</p></body></html>"))
        self.label_9.setText(_translate("MainWindow", "超分模型（模型区别请看悬浮说明）"))
        self.ResizeReminder.setToolTip(_translate("MainWindow", "单位：像素"))
        self.ResizeReminder.setText(_translate("MainWindow", "输出文件分辨率"))
        self.CropReminder.setToolTip(_translate("MainWindow",
                                                "<html><head/><body><p>视频宽和高的黑边像素个数</p><p>注意，这里取决于<span style=\" font-weight:600;\">输出文件分辨率</span></p></body></html>"))
        self.CropReminder.setText(_translate("MainWindow", "黑边长度"))
        self.label_5.setText(_translate("MainWindow", "高"))
        self.label_7.setText(_translate("MainWindow", "宽"))
        self.label_4.setToolTip(_translate("MainWindow", "只能是双数"))
        self.label_4.setText(_translate("MainWindow", "高"))
        self.label_3.setToolTip(_translate("MainWindow", "只能是双数"))
        self.label_3.setText(_translate("MainWindow", "宽"))
        self.ResizeTemplate.setToolTip(
            _translate("MainWindow", "<html><head/><body><p>画面分辨率预设</p><p><br/></p></body></html>"))
        self.ResizeTemplate.setItemText(0, _translate("MainWindow", "自定义"))
        self.ResizeTemplate.setItemText(1, _translate("MainWindow", "150%"))
        self.ResizeTemplate.setItemText(2, _translate("MainWindow", "200%"))
        self.ResizeTemplate.setItemText(3, _translate("MainWindow", "300%"))
        self.ResizeTemplate.setItemText(4, _translate("MainWindow", "400%"))
        self.ResizeTemplate.setItemText(5, _translate("MainWindow", "800%"))
        self.ResizeTemplate.setItemText(6, _translate("MainWindow", "SD 480p"))
        self.ResizeTemplate.setItemText(7, _translate("MainWindow", "HD 1080p"))
        self.ResizeTemplate.setItemText(8, _translate("MainWindow", "4K UHD"))
        self.ResizeTemplate.setItemText(9, _translate("MainWindow", "8K UHD"))
        self.UseAiSR.setToolTip(_translate("MainWindow", "<html><head/><body><p>NCNN</p></body></html>"))
        self.UseAiSR.setText(_translate("MainWindow", "使用AI超分"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.OutputResizeSettings), _translate("MainWindow", "输出分辨率设置"))
        self.label_26.setToolTip(_translate("MainWindow", "<html><head/><body><p>每一chunk的帧数大小</p></body></html>"))
        self.label_26.setText(_translate("MainWindow", "单一输出区块大小："))
        self.SlowmotionFPS.setPlaceholderText(_translate("MainWindow", "输入被映射至的帧率"))
        self.FFmpegCustomer.setPlaceholderText(_translate("MainWindow", "如输入“-crf 9” 会替换渲染质量的值"))
        self.BufferSizeSelector.setToolTip(_translate("MainWindow",
                                                      "<html><head/><body><p>防止爆内存，一般不用勾选。<span style=\" font-weight:600;\">专业人士自用</span></p></body></html>"))
        self.label_28.setText(_translate("MainWindow", "G"))
        self.label_27.setText(_translate("MainWindow", "帧    "))
        self.MBufferChecker.setToolTip(_translate("MainWindow",
                                                  "<html><head/><body><p>防止爆内存，一般不用勾选。<span style=\" font-weight:600;\">专业人士自用</span></p></body></html>"))
        self.MBufferChecker.setText(_translate("MainWindow", "手动指定缓冲区内存大小"))
        self.label_30.setToolTip(_translate("MainWindow", "输入项数必须为偶数"))
        self.label_30.setText(_translate("MainWindow", "自定义ffmpeg压制参数："))
        self.slowmotion.setToolTip(_translate("MainWindow",
                                              "<html><head/><body><p>使用指定帧率输出。效果等同于PR、AE的<span style=\" font-weight:600;\">时间重映射</span></p><p>输出将与右项帧率相同，输出时长与原视频时长的<span style=\" font-weight:600;\">比</span>等于左边的<span style=\" font-weight:600;\">输出帧率/该项帧率</span></p><p>e.g.</p><p>输出帧率=60fps</p><p>时间重映射帧率=30fps</p><p>最终输出将为30fps，时长为原输入的两倍</p></body></html>"))
        self.slowmotion.setWhatsThis(_translate("MainWindow",
                                                "<html><head/><body><p><span style=\" font-weight:600;\">补帧帧率 = 输入帧率 * 补帧倍率</span></p></body></html>"))
        self.slowmotion.setText(_translate("MainWindow", "时间重映射"))
        self.KeepChunksChecker.setText(_translate("MainWindow", "保留中间文件(chunks)"))
        self.EncodeSettingsLabel.setText(_translate("MainWindow", "编码质量"))
        self.EncoderSelector.setItemText(0, _translate("MainWindow", "H264,8bit"))
        self.label_25.setToolTip(_translate("MainWindow",
                                            "<html><head/><body><p><span style=\" font-weight:600;\">CPU:</span> 不使用硬件编码</p><p><span style=\" font-weight:600;\">NVENC: </span>使用NVIDIA显卡进行硬件编码，速度快，质量高</p><p><span style=\" font-weight:600;\">QSV: </span>使用Intel集显进行硬件编码，编码质量看情况而定。没有Intel集显不要使用此项。</p><p><br/></p><p>如果在输出窗口遇到<span style=\" font-weight:600;\">Broken Pipe</span>错误，请尝试勾选None以取消使用硬件编码</p><p><br/></p></body></html>"))
        self.label_25.setText(_translate("MainWindow", "编码器"))
        self.QuickExtractChecker.setToolTip(
            _translate("MainWindow", "<html><head/><body><p>使用ffmpeg内置视频导出图片算法，速度稍快，但可能出现颜色偏差</p></body></html>"))
        self.QuickExtractChecker.setText(_translate("MainWindow", "快速拆帧"))
        self.HwaccelPresetSelector.setToolTip(
            _translate("MainWindow", "<html><head/><body><p>第几代N卡</p><p><br/></p></body></html>"))
        self.HwaccelPresetSelector.setItemText(0, _translate("MainWindow", "None"))
        self.HwaccelPresetSelector.setItemText(1, _translate("MainWindow", "5th"))
        self.HwaccelPresetSelector.setItemText(2, _translate("MainWindow", "6th"))
        self.HwaccelPresetSelector.setItemText(3, _translate("MainWindow", "7th+"))
        self.PresetReminder.setToolTip(_translate("MainWindow",
                                                  "<html><head/><body><p><span style=\" font-weight:600;\">slow或veryslow的压制质量一般是好的，速度慢</span></p><p>ll是硬件编码专用预设，代表low latency，低延迟，速度快，质量不高</p><p>hq是硬件编码专用预设，代表high quality，相对高质量，但不会比slow高</p><p><span style=\" font-weight:600;\">其他都是字面意思</span></p></body></html>"))
        self.PresetReminder.setText(_translate("MainWindow", "选择压制预设："))
        self.HwaccelSelector.setToolTip(
            _translate("MainWindow", "<html><head/><body><p><br/></p><p><br/></p></body></html>"))
        self.HwaccelSelector.setItemText(0, _translate("MainWindow", "CPU"))
        self.HwaccelSelector.setItemText(1, _translate("MainWindow", "NVENC"))
        self.HwaccelSelector.setItemText(2, _translate("MainWindow", "QSV"))
        self.PresetSelector.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.PresetSelector.setCurrentText(_translate("MainWindow", "slow"))
        self.PresetSelector.setItemText(0, _translate("MainWindow", "slow"))
        self.TargetBitrateMeasure.setText(_translate("MainWindow", "M"))
        self.UseEncodeThread.setText(_translate("MainWindow", "指定编码线程数"))
        self.UseCRF.setText(_translate("MainWindow", "渲染质量CRF："))
        self.StrictModeChecker.setToolTip(
            _translate("MainWindow", "<html><head/><body><p>勾选此项则严格按照自定义的编码设置进行编码，不进行HDR内容检查</p></body></html>"))
        self.StrictModeChecker.setText(_translate("MainWindow", "HDR输入严格模式"))
        self.UseTargetBitrate.setToolTip(_translate("MainWindow",
                                                    "<html><head/><body><p>目标码率，1pass下不代表实际码率</p><p>最终输出码率大概率低于目标码率，<span style=\" font-weight:600;\">请勿恐慌</span></p><p><span style=\" font-weight:600;\">如果想输出高码率，请使用ProRes编码（剪辑专用）</span></p></body></html>"))
        self.UseTargetBitrate.setText(_translate("MainWindow", "目标码率："))
        self.HwaccelDecode.setToolTip(_translate("MainWindow",
                                                 "<html><head/><body><p>减小CPU解码负担，输入为4K时推荐开启</p><p>如果无法补帧，请尝试关闭此选项</p></body></html>"))
        self.HwaccelDecode.setText(_translate("MainWindow", "硬件解码"))
        self.EncoderReminder.setToolTip(_translate("MainWindow",
                                                   "<html><head/><body><p><span style=\" font-weight:600;\">HEVC</span>：高效视频压制格式，用更低的码率获得更优的画面质量。对于配置较低的电脑，解码可能会有困难。4K、HDR、用于收藏的蓝光原盘等内容只推荐使用此编码</p><p><span style=\" font-weight:600;\">H264</span>：非常通用的压制编码，不推荐用于超高清内容</p><p><span style=\" font-weight:600;\">ProRes: </span>剪辑中间格式专用，如果你希望码率越大越好，选这个就完事了</p><p><span style=\" font-weight:600;\">8bit，10bit的区别：</span>自行百度，10bit可以有效除去画面色带</p></body></html>"))
        self.EncoderReminder.setText(_translate("MainWindow", "选择压制编码： "))
        self.HwaccelPresetLabel.setToolTip(_translate("MainWindow",
                                                      "<html><head/><body><p><span style=\" font-weight:600;\">仅在使用NVENC编码器时生效</span></p><p>针对10系或20系N卡，右为编码器辈数（请自行查阅自己显卡的NVENC辈数）</p><p>辈数越高，压缩率越好</p><p>如果使用此项报Broken Pipe错误，请尝试降级（如7th改为6th）或关闭（调为None）</p><p><span style=\" font-weight:600;\">恰当选择此项有望显著提高N卡硬编压制质量</span></p><p><span style=\" font-weight:600;\">详询开发团队</span></p></body></html>"))
        self.HwaccelPresetLabel.setText(_translate("MainWindow", "N卡硬编预设：（老黄送的福利！）"))
        self.FastDenoiseChecker.setToolTip(
            _translate("MainWindow", "<html><head/><body><p>使用cv2的快速降噪，减少画面噪点</p><p>会显著降低补帧效率</p></body></html>"))
        self.FastDenoiseChecker.setText(_translate("MainWindow", "快速降噪"))
        self.RenderSettingsLabel.setText(_translate("MainWindow", "渲染设置"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.RenderSettings), _translate("MainWindow", "输出质量设置"))
        self.InterpScaleSelector.setCurrentText(_translate("MainWindow", "1.00"))
        self.InterpScaleSelector.setItemText(0, _translate("MainWindow", "1.00"))
        self.InterpScaleSelector.setItemText(1, _translate("MainWindow", "0.25"))
        self.InterpScaleSelector.setItemText(2, _translate("MainWindow", "0.50"))
        self.InterpScaleSelector.setItemText(3, _translate("MainWindow", "2.00"))
        self.InterpScaleSelector.setItemText(4, _translate("MainWindow", "4.00"))
        self.label_32.setText(_translate("MainWindow", "用于补帧的N卡"))
        self.ModuleSelector.setToolTip(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.label_31.setToolTip(_translate("MainWindow",
                                            "<html><head/><body><p>可以在软件根目录-Utils-train_log文件夹定制模型的名字</p><p>一般来说，版本号越高代表模型越新</p><p>offical：<span style=\" font-weight:600;\">官方</span>发布模型</p><p>anime smooth：<span style=\" font-weight:600;\">动漫模型</span>，模糊但动作连贯</p><p>anime sharp：更清晰</p><p>anime experiment：速度更快，效果更清晰，较不丝滑，属于<span style=\" font-weight:600;\">实验</span>模型</p><p>2.x较慢，3.6较快</p><p>所有模型（如anime）的获取需要内测资格或者加入订阅</p></body></html>"))
        self.label_31.setText(_translate("MainWindow", "使用的补帧模型"))
        self.InterpScaleReminder.setToolTip(_translate("MainWindow",
                                                       "<html><head/><body><p><span style=\" font-weight:600;\">该值不是越大或者越小越好</span></p><p>分辨率720p以下视频推荐<span style=\" font-weight:600;\">1~2</span></p><p>分辨率4K及以上视频推荐<span style=\" font-weight:600;\">0.25~0.5</span></p><p><span style=\" font-weight:600;\">其余推荐1.0</span></p></body></html>"))
        self.InterpScaleReminder.setText(_translate("MainWindow", "光流尺度"))
        self.FP16Checker.setToolTip(_translate("MainWindow",
                                               "<html><head/><body><p>处理高分辨率视频时，<span style=\" font-weight:600;\">勾选此项可能会导致画面抖动</span></p></body></html>"))
        self.FP16Checker.setText(_translate("MainWindow", "半精度模式"))
        self.ReverseChecker.setToolTip(_translate("MainWindow",
                                                  "<html><head/><body><p>将前一张图片作为补帧的参考，即，<span style=\" font-weight:600;\">从后向前补</span>。</p><p>可能会比正向光流更流畅，但会严重影响3D动画补帧的高速运动的画面质量</p></body></html>"))
        self.ReverseChecker.setText(_translate("MainWindow", "反向光流"))
        self.AutoInterpScaleChecker.setToolTip(
            _translate("MainWindow", "<html><head/><body><p>动态选择光流尺度，用于N卡将有效缓解物体消失问题</p></body></html>"))
        self.AutoInterpScaleChecker.setText(_translate("MainWindow", "动态光流尺度"))
        self.ForwardEnsembleChecker.setToolTip(_translate("MainWindow",
                                                          "<html><head/><body><p>只适用于N卡 3.x模型</p><p>开启后画面更清晰，但是比2.3模型慢</p><p>不开启比2.3快两倍，但补帧效果比2.3差</p></body></html>"))
        self.ForwardEnsembleChecker.setText(_translate("MainWindow", "双向光流"))
        self.AMDSettingsLabel.setText(_translate("MainWindow", "使用A卡进行补帧的参数"))
        self.TtaModeChecker.setText(_translate("MainWindow", "TTA模式"))
        self.label_34.setText(_translate("MainWindow", "补帧线程数"))
        self.label_35.setText(_translate("MainWindow", "选择的GPU"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.RIFESettings), _translate("MainWindow", "补帧设置"))
        self.GIFLabel.setText(_translate("MainWindow", "视频转GIF动图"))
        self.GifInput.setPlaceholderText(_translate("MainWindow", "输入视频路径"))
        self.GifButton.setText(_translate("MainWindow", "GIF制作！"))
        self.GifOutput.setPlaceholderText(_translate("MainWindow", "输出动图(gif)路径"))
        self.GifLoopChecker.setText(_translate("MainWindow", "循环动图"))
        self.ConcatInputV.setPlaceholderText(_translate("MainWindow", "输入视频路径"))
        self.ConcatInputA.setPlaceholderText(_translate("MainWindow", "输入音频路径（视频）"))
        self.OutputConcat.setPlaceholderText(_translate("MainWindow", "输出视频路径"))
        self.ConcatButton.setText(_translate("MainWindow", "音视频合并！"))
        self.ConcatAllButton.setText(_translate("MainWindow", "合并已有区块"))
        self.ConcatLabel.setText(_translate("MainWindow", "音视频合并"))
        self.StartExtractButton.setText(_translate("MainWindow", "开拆"))
        self.ExtractLabel.setText(_translate("MainWindow", "拆帧选中输入到输出文件夹（可用于GIF拆帧）"))
        self.StartRenderButton.setText(_translate("MainWindow", "开压"))
        self.label.setText(_translate("MainWindow",
                                      "<html><head/><body><p>仅对输入使用<span style=\" font-weight:600;\">输出质量设置</span>内的指定参数压制（可以顺便超分）</p></body></html>"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.ToolBox), _translate("MainWindow", "工具箱（不能在补帧过程中使用)"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.step1), _translate("MainWindow", "首页"))
        self.OptionCheck.setHtml(_translate("MainWindow",
                                            "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                            "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                            "p, li { white-space: pre-wrap; }\n"
                                            "</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
                                            "<p style=\"-qt-paragraph-type:empty; margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.label_17.setText(_translate("MainWindow", "总完成进度"))
        self.label_15.setText(_translate("MainWindow",
                                         "<html><head/><body><p><span style=\" font-size:12pt; font-weight:600; color:#ffffff;\">输出窗口</span><span style=\" font-size:12pt; color:#ffffff;\">页面，字体的不同颜色意义如下：</span></p><p><span style=\" font-size:10pt; font-weight:600; color:#ff0000;\">红色——错误，请在首页导出当前设置并向开发人员提交settings和error.log文件，群号264023742</span></p><p><span style=\" font-size:10pt; font-weight:600; color:#ffaa00;\">橙色——警告，可能会影响最终效果，但不影响输出</span></p><p><span style=\" font-size:10pt; font-weight:600; color:#00aa00;\">绿色——当前任务完成</span></p><p><span style=\" font-size:10pt; font-weight:600; color:#ffffff;\">如果程序无法结束（按下方的强制结束按钮无效），请直接右上角关闭软件，重来！</span></p></body></html>"))
        self.KillProcButton.setText(_translate("MainWindow", "强制结束补帧进程"))
        self.PauseProcess.setText(_translate("MainWindow", "暂停补帧"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.step3), _translate("MainWindow", "输出"))
        self.menu.setTitle(_translate("MainWindow", "文件"))
        self.menu_2.setTitle(_translate("MainWindow", "启动"))
        self.menuAboutSVFI.setTitle(_translate("MainWindow", "帮助"))
        self.actionImportVideos.setText(_translate("MainWindow", "导入文件"))
        self.actionClearVideo.setText(_translate("MainWindow", "清除所选的导入项"))
        self.actionClearVideo.setShortcut(_translate("MainWindow", "Del"))
        self.actionClearAllVideos.setText(_translate("MainWindow", "清除所有导入"))
        self.actionClearAllVideos.setShortcut(_translate("MainWindow", "Ctrl+Del"))
        self.actionPreferences.setText(_translate("MainWindow", "偏好设置"))
        self.actionQuit.setText(_translate("MainWindow", "退出程序"))
        self.actionStartProcess.setText(_translate("MainWindow", "启动补帧程序"))
        self.actionStartProcess.setShortcut(_translate("MainWindow", "Ctrl+Return"))
        self.actionSelect_Start_Frames.setText(_translate("MainWindow", "Select Start Frames"))
        self.actionSelect_End_Frames.setText(_translate("MainWindow", "Select End Frames"))
        self.actionSaveSettings.setText(_translate("MainWindow", "保存当前设置"))
        self.actionLoadDefaultSettings.setText(_translate("MainWindow", "载入默认设置"))
        self.actionErrorLog.setText(_translate("MainWindow", "错误日志"))
        self.actionGetSupport.setText(_translate("MainWindow", "获取帮助"))
        self.actionManualGuide.setText(_translate("MainWindow", "快速教程"))
        self.actionAbout.setText(_translate("MainWindow", "关于SVFI"))
        self.actionStopProcess.setText(_translate("MainWindow", "终止补帧程序"))
        self.actionStopProcess.setShortcut(_translate("MainWindow", "Ctrl+End"))
from Utils.RIFE_GUI_Custom import MyComboBox, MyDoubleSpinBox, MyLineWidget, MyListWidget, MySpinBox, MyTextWidget
